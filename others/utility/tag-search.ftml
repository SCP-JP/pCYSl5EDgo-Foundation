[!--
仕組みの解説: この検索システムでは、wikidotモジュールのListPage機能を使用して記事一覧を作成しています。このモジュールは元々ページ一覧を作成するためのものであるため、下記のように様々なオプションが存在しています。このオプションには通常数値や文字列を最初から定義しておくのですが、検索オプション="@URL|デフォルトの値"というパラメータを入力すると、そのページのURLの末尾に「/検索オプション/任意のパラメータ」という文字列を加えたリンクに飛ぶことで、その任意のパラメータを反映させた状態でリストが作成されます。更にこのURLに付け加える要素は重ねることが出来るので、様々なオプションを自由に設定することができます。上記の検索システム本体は、Javascriptを使って検索オプション入力用URLを生成するためのものです。
 --]
+ ここに現在のタグリストのタグを記述します。
[!--
[[code type="javascript"]]
/*第2カテゴリー登録。
「アトリビュー（生物）:生物学:遺伝子」の様にカテゴリが2つある場合、
第2のカテゴリ（上記の例で言えば「生物学」）の内容を定義
第1カテゴリより前に定義しなければ、プログラムは動かない。
カテゴリ名:{
    <実際に検索するタグ名>　: <検索フォーム表示名>
}
という形式です
登録したタグが最後でない場合は必ず末尾に
,(カンマ)を記入してください。逆に登録したタグが最後の場合は必ず,(カンマ)を外してください。
詳しくはソースコードを参照してください。*/
 
var majorTags={
    "創作物":{
        "scp":"scp",
        "explained":"explained(scp)",
        "decommissioned":"decommissioned(scp)",
        "goi-format":"goi-format",
        "tale":"tale",
        "クリーピーパスタ":"クリーピーパスタ(tale)",
        "補足":"補足",
        "実験":"実験(補足)",
        "探査":"探査(補足)",
         "インシデント":"インシデント(補足)",
        "インタビュー":"インタビュー(補足)",
        "サイト":"サイト",
        "剪定対象-子":"剪定対象-子"
    },
    "脅威レベル":{
        "白":"白(scp)",
        "青":"青(scp)",
        "緑":"緑(scp)",
        "黄":"黄(scp)",
        "橙":"橙(scp)",
        "赤":"赤(scp)",
        "黒":"黒(scp)",
        "未定":"未定(scp)"
    },
    "インフォメーション":{
        "ガイド":"ガイド",
        "執筆":"執筆",
        "ユーティリティ":"ユーティリティ",
        "エッセイ":"エッセイ",
        "他支部公式":"他支部公式",
        "ニュース":"ニュース"
    },
    "ユーザー":{
        "著者ページ":"著者ページ",
        "アートワーク":"アートワーク",
        "フォト作品":"フォト作品"
    },
    "インポート":{
        "コンポーネント":"コンポーネント",
        "コンポーネント・バックエンド":"コンポーネント・バックエンド",
        "テーマ":"テーマ",
        "フラグメント":"フラグメント",
        "トップ掲載":"トップ掲載"
    },
    "インターナル":{
        "管理":"管理",
        "フォーラム":"フォーラム",
        "見出し":"見出し",
        "メタデータ":"メタデータ",
        "投票":"投票"
    },
    "その他":{
        "ハブ":"ハブ",
        "コンテスト":"コンテスト",
        "キャンペーン":"キャンペーン",
        "プロジェクト":"プロジェクト",
        "ワークベンチ":"ワークベンチ",
        "サンドボックス":"サンドボックス"
    }
};

var AttributeCreature = {
    "生物学":{
        "遺伝子":"遺伝子",
        "骨格":"骨格",
        "死体":"死体",
        "神経":"神経",
        "睡眠":"睡眠",
        "生殖":"生殖",
        "性的":"性的",
        "生命":"生命",
        "生物学":"生物学",
        "蘇生":"蘇生",
        "体肢":"体肢",
        "中毒":"中毒",
        "歯":"歯",
        "捕食":"捕食",
        "眼":"眼"
        },
    "生物分類":{
        "ウイルス":"ウイルス",
        "恐竜":"恐竜",
        "魚類":"魚類",
        "昆虫":"昆虫",
        "植物":"植物",
        "樹木":"樹木",
        "節足動物":"節足動物",
        "鳥類":"鳥類",
        "頭足類":"頭足類",
        "動物":"動物",
        "バクテリア":"バクテリア",
        "爬虫類":"爬虫類",
        "無脊椎動物":"無脊椎動物",
        "ワーム":"ワーム"
        },
    "哺乳類":{
        "イヌ":"イヌ",
        "ウサギ":"ウサギ",
        "ウシ":"ウシ",
        "ウマ":"ウマ",
        "クジラ":"クジラ",
        "クマ":"クマ",
        "サル":"サル",
        "シカ":"シカ",
        "ネコ":"ネコ",
        "ネズミ":"ネズミ",
        "リス":"リス"
        },
    "その他生物種":{
        "カエル":"カエル",
        "クモ":"クモ",
        "真菌類":"真菌類",
        "チョウ":"チョウ",
        "軟骨魚類":"軟骨魚類",
        "ハチ":"ハチ",
        "ヘビ":"ヘビ"
        },
    "生態":{
        "空棲":"空棲",
        "水棲":"水棲",
        "夜行性":"夜行性",
        "肉食":"肉食",
        "雑食":"雑食",
        "寄生":"寄生",
        "擬態":"擬態",
        "群れ":"群れ",
        "種族":"種族"
        },
    "精神":{
        "記憶影響":"記憶影響",
        "自我":"自我",
        "集団意識":"集団意識",
        "精神影響":"精神影響",
        "精神感応":"精神感応",
        "知性":"知性"
        },
    "感覚":{
        "感覚":"感覚",
        "嗅覚":"嗅覚",
        "幻覚":"幻覚",
        "視覚":"視覚",
        "触覚":"触覚",
        "聴覚":"聴覚",
        "味覚":"味覚"
        }
};
 
var AttributeScience = {
     "物理学":{
        "液体":"液体",
        "エントロピー":"エントロピー",
        "炎":"炎",
        "温度":"温度",
        "音波":"音波",
        "影":"影",
        "可視光":"可視光",
        "時間":"時間",
        "重力":"重力",
        "磁力":"磁力",
        "振動":"振動",
        "電気":"電気",
        "電磁気":"電磁気",
        "熱力学":"熱力学",
        "物理学":"物理学",
        "放射性":"放射性"
    },
    "天文・SF":{
        "異次元":"異次元",
        "衛星":"衛星",
        "外部エントロピー":"外部エントロピー",
        "時空間":"時空間",
        "太陽":"太陽",
        "地球外":"地球外",
        "月":"月",
        "パラドックス":"パラドックス",
        "ポータル":"ポータル",
        "未来":"未来",
        "ループ":"ループ",
        "惑星":"惑星"
    },
    "その他科学":{
        "概念":"概念",
        "化学":"化学",
        "確率":"確率",
        "気体":"気体",
        "数学":"数学",
        "地質":"地質",
        "天候":"天候",
        "毒性":"毒性",
        "腐食":"腐食",
        "立方体":"立方体"
    },
    "機械":{
        "家電":"家電",
        "記憶媒体":"記憶媒体",
        "機械":"機械",
        "自動装置":"自動装置",
        "ぜんまい仕掛け":"ぜんまい仕掛け",
        "電子デバイス":"電子デバイス",
        "時計":"時計"
    },
    "情報":{
        "オンライン":"オンライン",
        "記述":"記述",
        "コンピュータ":"コンピュータ",
        "知識":"知識",
        "通信":"通信",
        "反ミーム":"反ミーム",
        "文書":"文書",
        "ミーム":"ミーム",
        "メタ":"メタ",
        "録音録画":"録音録画"
    },
    "材質":{
        "ガラス":"ガラス",
        "岩石":"岩石",
        "金属":"金属",
        "結晶":"結晶",
        "粘土":"粘土",
        "木製":"木製",
        "有機体":"有機体"
    },
    "異常性":{
        "移動不可能":"移動不可能",
        "現実改変":"現実改変",
        "瞬間移動":"瞬間移動",
        "テレパシー":"テレパシー",
        "念力":"念力",
        "破壊不可能":"破壊不可能",
        "予知":"予知"
    }
};
 
var AttributeOthers = {
    "社会":{
        "医療":"医療",
        "貨幣":"貨幣",
        "企業":"企業",
        "儀式":"儀式",
        "軍事":"軍事",
        "言語":"言語",
        "宗教":"宗教",
        "神話伝説":"神話伝説(CN)",
        "鉄道":"鉄道(JP)",
        "都市":"都市",
        "歴史":"歴史"
    },
    "文化・芸術":{
        "音楽":"音楽",
        "語り":"語り",
        "楽器":"楽器",
        "芸術":"芸術",
        "芸能":"芸能",
        "ゲーム":"ゲーム",
        "刻印":"刻印",
        "スポーツ":"スポーツ",
        "像":"像",
        "彫刻":"彫刻"
    },
    "災害":{
        "k-クラスシナリオ":"K-クラスシナリオ",
        "情報災害":"情報災害",
        "生物災害":"生物災害",
        "伝染性":"伝染性",
        "認識災害":"認識災害"
    },
    "人工物":{
        "鍵":"鍵",
        "家具":"家具",
        "玩具":"玩具",
        "財団製":"財団製",
        "写真":"写真",
        "食物":"食物",
        "人工":"人工",
        "船舶":"船舶(JP)",
        "装飾品":"装飾品",
        "地図":"地図",
        "道具":"道具",
        "乗り物":"乗り物",
        "武器":"武器",
        "衣類":"衣類",
        "容器":"容器"
    },
    "ロケーション":{
        "建造物":"建造物",
        "構造":"構造",
        "図書館":"図書館",
        "国外収容":"国外収容(JP)",
        "地下":"地下",
        "場所":"場所",
        "未収容":"未収容"
    },
    "形状":{
        "球体":"球体",
        "微視的":"微視的",
        "多面体":"多面体",
        "人間型":"人間型",
        "非実体":"非実体",
        "不定形":"不定形",
        "変身":"変身",
        "変容":"変容",
        "ミニチュア":"ミニチュア",
        "文字入り":"文字入り"
    },
    "行動など":{
        "移動":"移動",
        "観測":"観測",
        "強制力":"強制力",
        "交換":"交換",
        "自己修復":"自己修復",
        "自己複製":"自己複製",
        "自律":"自律",
        "適応":"適応",
        "敵対的":"敵対的"
        }
}

var GoIFormat={
    "GoI-ENのフォーマット":{
        "_alexylva大学":"Alexylva大学のフォーマット",
        "_アンブローズ・レストラン":"アンブローズ・レストランのフォーマット",
        "_アンダーソン":"アンダーソン・ロボティクスのフォーマット",
        "_アルカディア":"アルカディアのフォーマット",
        "_are-we-cool-yet":"Are We Cool Yet?(AWCY)のフォーマット",
        "_黒の女王":"黒の女王",
        "_カオス・インサージェンシー":"カオス・インサージェンシー(CI)のフォーマット",
        "_シカゴ・スピリット":"シカゴ・スピリットのフォーマット",
        "_壊れた神の教会":"壊れた神の教会(CotBG)のフォーマット",
        "_第二ハイトス教会":"第二ハイトス教会のフォーマット",
        "_ディア大学":"ディア大学のフォーマット",
        "_ワンダーテインメント博士":"ワンダーテインメント博士のフォーマット",
        "_エリック":"エリックのフォーマット",
        "_ファクトリー":"ザ・ファクトリーのフォーマット",
        "_第五教会":"第五教会のフォーマット",
        "_ゲーマーズアゲインストウィード":"ゲーマーズアゲインストウィードのフォーマット",
        "_世界オカルト連合":"世界オカルト連合(GOC)のフォーマット",
        "_gru-p-部局":'ロシア連邦軍参謀本部情報総局"P"部局のフォーマット',
        "_ハーマン・フラー":"ハーマン・フラーの不気味サーカスのフォーマット",
        "_境界線イニシアチブ":"境界線イニシアチブのフォーマット",
        "_icsut":"国際統一奇跡論研究センター(ICSUT)のフォーマット",
        "_ijamea":"大日本帝国異常事例調査局(IJAMEA)のフォーマット",
        "_ラ・リュー・マカーブラー":"ラ・リュー・マカーブラーのフォーマット",
        "_マナによる慈善財団":"マナによる慈善財団のフォーマット",
        "_mc&d":"マーシャル・カーター＆ダーク株式会社 (MC&D)のフォーマット",
        "_何者でもない":"「何者でもない」のフォーマット",
        "_oria":"イスラム・アーティファクト開発事務局 (ORIA)のフォーマット",
        "_オネイロイ":"オネイロイ・コレクティブのフォーマット",
        "_プロメテウス":"株式会社プロメテウス研究所のフォーマット",
        "_サーキック":"サーキック・カルトのフォーマット",
        "_蛇の手":"蛇の手のフォーマット",
        "_サメ殴りセンター":"サメ殴りセンター(SPC)のフォーマット",
        "_三ツ月イニシアチブ":"三ツ月イニシアチブのフォーマット",
        "_異常積荷委員会":"異常積荷委員会のフォーマット",
        "_異常事件課":"連邦捜査局(FBI)異常事件課(UIU)のフォーマット",
        "_堂守連盟":"堂守連盟のフォーマット",
        "_ヴィキャンデル・ニード":"ヴィキャンデル=ニード・テクニカル・メディアのフォーマット",
        "_ウィルソンズ・ワイルドライフ":"ウィルソンズ・ワイルドライフ・ソリューションズ (WWS)のフォーマット",
        "_その他団体-en":"専用のGoIF隠しタグが無いGoI-ENのフォーマット"
    },
    "GoI-JPのフォーマット":{
        "_青大将":"青大将のフォーマット",
        "_aki商事":"AKI商事のフォーマット",
        "_pamwac":"アニメキャラクターと結婚するための研究計画局(PAMWAC)のフォーマット",
        "_日奉一族":"日奉一族のフォーマット",
        "_imaginanimal":"Imaginanimalのフォーマット",
        "_イワナガ美容組合":"イワナガ美容組合のフォーマット",
        "_エルマ外教":"エルマ外教のフォーマット",
        "_弟の食料品":"弟の食料品のフォーマット",
        "_神枷一族":"神枷一族のフォーマット",
        "_如月工務店":"如月工務店のフォーマット",
        "_公安部特事課":"警視庁公安部特事課のフォーマット",
        "_恋昏崎新聞社":"恋昏崎新聞社のフォーマット",
        "_五行結社":"五行結社のフォーマット",
        "_犀賀派":"犀賀派のフォーマット",
        "_蒐集院":"蒐集院のフォーマット",
        "_石榴倶楽部":"石榴倶楽部のフォーマット",
        "_負号部隊":"大日本帝国陸軍特別医療部隊(負号部隊)のフォーマット",
        '_超電救助隊hero':"超電救助隊HEROのフォーマット",
        "_遠野妖怪保護区":"遠野妖怪保護区のフォーマット",
        "_東弊重工":"東弊重工のフォーマット",
        "_ttt社":"トリスメギストス・トランスレーション&トランスポーテーションのフォーマット",
        "_日本生類創研":"日本生類創研のフォーマット",
        "_jagpato":"日本超常組織平和友好条約機構のフォーマット",
        "_博士":"博士のフォーマット",
        "_幻島同盟":"幻島同盟のフォーマット",
        "_無尽月導衆":"無尽月導衆のフォーマット",
        "_酩酊街":"酩酊街のフォーマット",
        "_ライフラフト":"ライフラフトのフォーマット",
        "_闇寿司":"闇寿司のフォーマット",
        "_夢見テクノロジー":"夢見テクノロジーのフォーマット",
        "_その他団体-jp":"専用のGoIF隠しタグが無いGoI-JPのフォーマット"
    },
    "他支部のGoIのフォーマット":{
        "_異学会":"中華異学会のフォーマット",
        "_グリーン・スパロウ財団":" グリーン・スパロウ財団のフォーマット",
        "_saphir":"神秘主義終焉のための無神論者協会(SAPHIR)のフォーマット",
        "_madao":"メディチ神秘芸術学会(MADAO)のフォーマット",
        "_その他団体-他支部":"専用のGoIF隠しタグが無いJPとEN以外の支部のGoIのフォーマット"
    }
};

var ContentsMarker={
    "ページ特性":{
        "必読":"必読",
        "殿堂入り":"殿堂入り",
        "合作":"合作",
        "剪定対象-親":"剪定対象-親(合作)",
        "設定集":"設定集(合作)",
        "合同編集":"合同編集(合作)",
        "共著":"共著",
        "インターナショナル":"インターナショナル",
        "音声添付":"音声添付",
        "映像添付":"映像添付",
        "リダイレクト":"リダイレクト"
    },
    "記事特性":{
        "世界観":"世界観",
        "001提言":"001提言",
        "アダルト":"アダルト",
        "詩的文学":"詩的文学",
        "漢文":"漢文",
        "インタラクティブ":"インタラクティブ",
        "ジョーク":"ジョーク"
    },
    "注目記事":{
        "注目記事":"注目記事",
        "賞典-注目記事":"賞典-注目記事",
        "イベント-注目記事":"イベント-注目記事",
        "批評者スポットライト":"批評者スポットライト",
        "注目の翻訳記事":"注目の翻訳記事"
    }
};

var branchTags={
    "en":"en",
    "jp":"jp",
    "公式支部":{
        "ru":"ru",
        "ko":"ko",
        "cn":"cn",
        "fr":"fr",
        "pl":"pl",
        "es":"es",
        "th":"th",
        "de":"de",
        "it":"it",
        "ua":"ua",
        "pt":"pt",
        "cs":"cs",
        "sk":"sk",
        "zh":"zh",
        "vn":"vn"
    },
    "非公式支部":{
        "tr":"tr",
        "nd":"nd",
        "el":"el",
        "id":"id"
    },
    "int":"int",
    "その他":{
        "未認可支部":"未認可支部",
        "外部ウィキアーカイブ":"外部ウィキアーカイブ"
    }
};

var Series={
    "カノン-EN":{
        '死人の手札':"死人の手札",
        'アド・アストラ':"アド・アストラ・ペル・アスペラ",
        'aiad':"AIAD ホーム画面",
        '錬金術部門':"財団錬金術部門",
        '南極の交流':"南極の交流",
        'アポセオシス':"アポセオシス",
        '鐘を鳴らす者の詩':"鐘を鳴らす者の詩",
        'ブラックラビット社':"団結号を奪え",
        '壊された虚構':"壊された虚構",
        '競り合う終末論':"競り合う終末論",
        'クールな戦争2':"クールな戦争2: お前の墓から来たるルイス",
        '深淵目録':"サイト-17深淵目録",
        '教会の博士':"教会の博士",
        '破暁':"破暁",
        'ドレッド&サーカス':"ドレッド&サーカス",
        '死の終焉':"死の終焉",
        'etdp':"そして私は神を求めた",
        '120の史料館より':"120の史料館より",
        '翠の王':"コードネーム：翠の王",
        'ヘイムダル':"ヘイムダル計画",
        'insect-hell':"昆虫地獄(インセクト・ヘル)",
        'たのしいざいだん':"たのしいざいだん",
        '存在しなかった者':"存在しなかった者",
　 　 '老人との海':"老人との海",
　 　 'on-guard-43':"On Guard 43",
        'ゴルゴタの丘で':"ゴルゴタの丘で",
        '最上の事':"最上の事",
        'オルカディア':"オルカディア",
        'pitch-haven':"Pitch Haven",
        'ぼさぐちゃ':"ぽさぐちゃ",
        'リザレクション':"甦──リザレクション",
        's&cプラスチック':"S & Cプラスチック",
        'ボトルシップ':"ボトルシップ",
        'sotm':"朝までまっすぐに",
        '極寒の戦争':"極寒の戦争",
        'メキシコ湾':"メキシコ湾",
        '追憶のアディトゥム':"追憶のアディトゥム",
        'トラッシュファイア':"トラッシュファイア",
        '第三法則':"第三法則",
        'ねじれた松の木':"ねじれた松の木",
        '財団のない世界':"財団のない世界",
        '人ならぬもの':"人ならぬもの",
        '全ての戦線で戦え':"全ての戦線で戦え",
        '素晴らしき世界':"この素晴らしき世界"
    },
    "カノン-JP":{
        'わるいざいだん':"わるいざいだん",
        'odss':"〈オフィサー、ドクター、ソルジャー、スパイ〉",
        '扶桑紀':"扶桑紀(",
        '1998':"1998年",
        'スシブレード':"スシブレード",
        'ファウンデーション・コレクティブ':"ファウンデーション・コレクティブ",
        'アブサンの夢':"アブサンの夢",
        '四辻喜劇':"四辻喜劇",
        '筐体造り':"筐体造り",
        '聖杯を仰ぐ翳':"聖杯を仰ぐ翳",
        '共異廻歴':"共異廻歴",
        '相貌失認':"相貌失認",
        'ちいさなざいだん':"ちいさなざいだん",
        '極夜灯':"極夜灯",
        '二重の故郷':"二重の故郷",
        'thanatomania':"thanatomania",
        '大正150年':"大正150年",
        'まずしいざいだん':"まずしいざいだん"
    },
    "カノン-RU":{
        'サイト-7':"サイト-7",
        'scp-h':"H",
        'dira':"DIRA"
    },
    "カノン-KO":{
        '朝鮮':"朝鮮",
        '霧津奇譚':"霧津奇譚",
        'アノマリンピック':"アノマリンピック"
    },
    "カノン-CN":{
        '生':"生",
        'ニルヴァーナ':"ニルヴァーナ",
        '豊穣公社':"豊穣公社",
        '忘れ難きもの':"忘れ難きもの",
        '鏡面の引火点':"鏡面の引火点",
        '深淵の光':"深淵の光同修会",
        '財団4k':"財団4k",
        '公費旅行':"公費旅行",
        '散結':"散結",
        '医院':"医院",
        '空と大地のラプソディ':"空と大地のラプソディ",
        'linkage':"linkAge",
        'アイディタ計画':"アイディタ計画",
        '港城江':"港．城．江",
        '荏苒荒涼':"荏苒荒涼"
    },
    "カノン-FR":{
        'retour-à-l-anormal':"Retour à l'Anormal",
        'bsia':"特異個体監督課",
        '楽屋裏':"楽屋裏",
        '壁を背に':"壁を背に",
        '人的資源':"人的資源"
    },
    "カノン-PL":{
        '雑草':"雑草",
        '潜伏治療':"潜伏治療"
    },
    "カノン-ES":{
        'i-57':"施設-57",
        '死せる星の観測':"死せる星の観測",
        '核の夢':"核の夢"
    },
    "カノン-TH":{
        'ホラーな財団':"ホラーな財団"
    },
    "カノン-DE":{
        'ドイツscp財団':"ドイツSCP財団",
        'machina':"Machina",
        'asp':"ASP記事(Machina)",
        'トリックスター計画':"トリックスター計画",
        '青玉色の空':"青玉色の空",
        'skp':"異常利用特殊部隊"
    },
    "カノン-ZH":{
        'ニュークリオン・バンク':"ニュークリオン・バンク",
        '神異博覧会':"神異博覧会1935",
        "転生計画":'転生計画'
    },

    "Taleシリーズ-EN":{
        'アナバシス':"アナバシス",
        'ao-tale':"Anomalousアイテムの物語",
        'classical-revival':"クラシカル・リバイバル",
        'コレクターtale':"ミスター・コレクター",
        'goc事件簿':"世界オカルト連合事件簿",
        'kiryu-labs':"桐生研究所",
        'mister':"リトル・ミスターズ",
        'olympia':"オリンピア・プロジェクト",
        'orientation':"オリエンテーションシリーズ",
        '防御柵計画':"防御柵計画",
        'project-crossover':"クロスオーバープロジェクト",
        'project-thaumiel':"プロジェクトThaumiel",
        'team-bird':"チームバード"
    },
    "連作-JP":{
        '忘年会2013':"財団日本支部年中行事 - 2013年忘年会",
        'タタールの軛':"タタールの軛",
        '大怪獣決戦テイル':"大怪獣決戦テイル",
        '宴の後':"宴の後",
        'ゲーデ・フィルム':"『ゲーデ・フィルム』",
        '青鈍色の空':"青鈍色の空",
        '信濃中央新聞':"信濃中央新聞",
        '剖検':"剖検",
        '白色家系図録':"白乃瀬の一族",
        'お見合い2020':"財団日本支部お見合い計画2020",
        'マンハッタン・クライシス':"マンハッタン・クライシス",
        '怪奇銘々伝':"怪奇銘々伝",
        'rror':"rror",
        'purple':"PURPLE",
        'グレースケール':"グレースケール",
        'レ・テュウール・デリ':"レ・テュウール・デリ",
        'h-e-r-operation':"H.E.R.オペレーション",
        '蛇と焚書のカルテット':"蛇と焚書のカルテット",
        '広域収容事例':"広域怪異収容事例記録",
        '制空権':"制空権",
        '氷我記':"氷我記",
        '人内魔境':"人内魔境",
        '財団ラジオ放送局':"財団ラジオ放送局",
        '財団探偵':"財団探偵",
        'dārum-tracer':"dārum tracer",
        '依談':"依談",
        'critics':"CRITICS",
        'なぜいい天気だと言ったのか':"そしてこの世の終わりが来て、静かなる世界で彼はなぜいい天気だと言ったのか？",
        'poi-1933':"poi-1933",
        '妙麗寺':"妙麗寺"
    },
    "Taleシリーズ-KO":{
        "トマト":"トマト・プロジェクト"
    },
    "Taleシリーズ-CN":{
        'becaloid':"becaloid",
        '1111事件':"1111事件",
        '海鷗銜鑰':"海鷗銜鑰",
        '万劫歴数':"万劫歴数"
    },
    "Taleシリーズ-FR":{
        'アレフ、その後':"アレフ、その後"
    },
    "Taleシリーズ-DE":{
        'ding':"ものごと(Taleシリーズ-DE)",
        'nexus':"ネクサス(Taleシリーズ-DE)",
        'gottes-magie':"神の魔術(Taleシリーズ-DE)",
        'ccシリーズ':"一本の木、一個の宝石、一つの家族(Taleシリーズ-DE)"
    }
};

var GroupsOfInterest={
    "正要注意団体-EN":{
        'alexylva大学':"Alexylva大学",
        'アンブローズ・レストラン':"アンブローズ・レストラン",
        'アンダーソン':"アンダーソン・ロボティクス",
        'are-we-cool-yet':"Are We Cool Yet?",
        'アルカディア':"アルカディア",
        '黒の女王':"黒の女王",
        'カオス・インサージェンシー':"カオス・インサージェンシー",
        'シカゴ・スピリット':"シカゴ・スピリット",
        '壊れた神の教会':"壊れた神の教会",
        '第二ハイトス教会':"第二ハイトス教会",
        'daevite':"ダエーバイト",
        'ディア大学':"ディア大学",
        'ワンダーテインメント博士':"ワンダーテインメント博士",
        'ファクトリー':"ザ・ファクトリー",
        '第五教会':"第五教会",
        'ゲーマーズアゲインストウィード':"ゲーマーズアゲインストウィード",
        '世界オカルト連合':"世界オカルト連合",
        'gru-p-部局':'ロシア連邦軍参謀本部情報総局"P"部局',
        'ハーマン・フラー':"ハーマン・フラーの不気味サーカス",
        '境界線イニシアチブ':"境界線イニシアチブ",
　　　'ijamea':"大日本帝国異常事例調査局",
        'マナによる慈善財団':"マナによる慈善財団",
        'mc&d':"マーシャル・カーター＆ダーク株式会社",
        '何者でもない':"「何者でもない」",
        'oria':"イスラム・アーティファクト開発事務局(ORIA)",
        'オネイロイ':"オネイロイ・コレクティブ",
        'パラウォッチ':"パラウォッチWiki",
        'プロメテウス':"株式会社プロメテウス研究所",
        'サーキック':"サーキック・カルト",
        '蛇の手':"蛇の手",
        'サメ殴りセンター':"サメ殴りセンター(SPC)",
        '三ツ月イニシアチブ':"三ツ月イニシアチブ",
        '異常事件課':"連邦捜査局(FBI) 異常事件課(UIU)",
        'ヴィキャンデル・ニード':"ヴィキャンデル=ニード・テクニカル・メディア",
        '堂守連盟':"堂守連盟",
        'ウィルソンズ・ワイルドライフ':"ウィルソンズ・ワイルドライフ"
    },
    "準要注意団体-EN":{
        '怪奇部門':"怪奇部門",
        'accelerate-the-future':"Accelerate the Future",
        'asci':"全米確保収容イニシアチブ",
        'アベラール':"アベラール・プロフェッショナル・プロダクツ",
        'blackwood':"blackwood卿の冒険譚",
        'british-occult-service':"英国オカルト局/英国オカルト部",
        'brothers-of-death':"brothers-of-death",
        '夜闇の子ら':"夜闇の子ら",
        '松明の子供達':"松明の子供達",
        'class-of-76':"Class of '76",
        '金帳汗国':"金帳汗国",
        'グリーズバーガー':"グリーズバーガー",
        'hmfscp':"超常現象の確保収容に関する王立財団 / 珍品と過ぎ往く幻想の研究の為の王立財団(HMFSCP)",
        "icsut":"国際統一奇跡論研究センター(ICSUT)",
        '名もなきもの':"名もなきもの",
        '監督真司令部':"監督真司令部",
        'オブスクラ':"オブスクラ",
        'pattern-screamer':"pattern-screamer",
        'ペンタグラム':"ペンタグラム",
        'aw教授':"aw教授の発明物",
        'シュガーコム製菓':"シュガーコム製菓",
        "silicon-nornir":"硅/硅素のノルニルの従者達",
        "トトレイソフト":"トトレイソフト",
        "異常積荷委員会":"異常積荷委員会",
        'ウェストヘッド・メディア':"ウェストヘッド・メディア",
        '夏王朝':"夏王朝"
    },
    "正要注意団体-JP":{
        '日本生類創研':"日本生類創研",
        '東弊重工':"東弊重工",
        '蒐集院':"蒐集院",
        '犀賀派':"犀賀派",
        '博士':"博士",
        '負号部隊':"大日本帝国陸軍特別医療部隊(負号部隊)",
        'イワナガ美容組合':"イワナガ美容組合",
        '酩酊街':"酩酊街",
        'jagpato':"日本超常組織平和友好条約機構",
        '石榴倶楽部':"石榴倶楽部",
        '夢見テクノロジー':"夢見テクノロジー",
        'ttt社':"トリスメギストス・トランスレーション&トランスポーテーション",
        '恋昏崎新聞社':"恋昏崎新聞社",
        '如月工務店':"如月工務店",
        '幻島同盟':"幻島同盟",
        '公安部特事課':"警察庁公安部特事課",
        '闇寿司':"闇寿司",
        '無尽月導衆':"無尽月導衆",
        'エルマ外教':"エルマ外教",
        '神枷一族':"神枷一族",
        'ライフラフト':"ライフラフト",
        'imaginanimal':"Imaginanimal",
        '遠野妖怪保護区':"遠野妖怪保護区",
        '弟の食料品':"弟の食料品",
        'aki商事':"AKI商事",
        '日奉一族':"日奉一族",
        '五行結社':"五行結社",
        '超電救助隊hero':"超電救助隊HERO",
        'pamwac':"アニメキャラクターと結婚するための研究計画局(PAMWAC)"
    },
    "準注意団体-JP":{
        'e&e':"Entertainment & Enterprise社",
        '懐中銃教会':"懐中銃協会",
        '艦隊':"艦隊司令部",
        '帝国':"帝国",
        '如来観光':"如来観光",
        'andersen':"Andersen",
        'だいすきなせかい':"だいすきなせかい",
        '夢売り':"夢売り",　
        '蛸葦廃船':"蛸葦廃船",
        '旧南関東奇譚会界隈':"旧南関東奇譚会界隈",
        '有村組':"有村組",
        '葦の輪':"葦の輪",
        '夏鳥思想連盟':"夏鳥思想連盟",
        '理外研':"理外研",
        'yakushi':"医療産業連合Yakushi",
        'みどりのだいち':"みどりのだいちプロジェクト",
        '超工家電':"超工家電",
        '艦政本部対超常課':"艦政本部対超常課",
        '判官会':"判官会",
        '九十九機関':"九十九機関",
        '陰陽寮':"陰陽寮",
        '晴明院':"晴明院",
        'マクロカオシズム':"マクロカオシズム",
        'd-pixsea':"D-PiXsea",
        '久斯動物医療センター':"久斯動物医療センター",
        'ライト・クーリエ・エンタープライズ':"ライト・クーリエ・エンタープライズ",
        '青大将':"青大将",
        '浄土真宗本願誇負派':"浄土真宗本願誇負派",
        '黒服のアンチカーニズム':"黒服のアンチカーニズム",
        '回らない寿司協会':"回らない寿司協会",
        '花籠学園':"花籠学園",
    },

    "正要注意団体-RU":{
            '腐ち乱れる神の霊峰':"腐ち乱れる神の霊峰",
            'ロゴス':'株式会社"ロゴス"',
            '左利き':"左利き",
            'ミート・サーカス':"ミート・サーカス",
            "プログレス研究所":'"プログレス"研究所'
    },

    "正要注意団体-KO":{
            '路地道':"路地道",
            '国家超常防災院':"国家超常防災院",
            '赤斑蛇の手':"赤斑蛇の手",
            'サムデチョン':"サムデチョン",
            'セレスト':"セレスト",
            '深夜クラブ':"深夜クラブ",
            'エントロピーを越えて':"エントロピーを越えて",
            'スミレ':"スミレ",
            '中情第十局':"中央情報部 第十局",
            '清海鎮':"清海鎮",
            'プラグソフト':"プラグソフト",
            '樫の木':"真昼の樫の木さすらい楽団"
    },
    "準注意団体-KO":{
        '西天カントリークラブ':"西天カントリークラブ",
        '世乙加':"世乙加"
    },
    "正要注意団体-CN":{
            '銀河連邦':"銀河連邦",
            'クイヤン派':"クイヤン派",
            'cc':"聖クリスティーナ学院(St.Christina College)",
            '異学会':"中華異学会",
            '05':"05議会",
            'obメディア':"OBメディア",
            'レターズ・エンターテイメント':"レターズ・エンターテイメント",
            '袖まくり倶楽部':"袖まくり倶楽部",
            'eco出版社':"ECO出版社",
            '修正花卉':"修正花卉",
            'spi':"住血吸虫保護協会(SPI)",
            'the-doctor':"The Doctor",
            'gpエクスプレス':"gpエクスプレス",
            'グリーン・スパロウ財団':"グリーン・スパロウ財団",
            'ting':"TINGフォーラム",
            'PCS異元署':"PCS異元署",
            '魔法楽団':"魔法楽団",
            '劇組':"劇組",
            '風露旅社':"風露旅社"
    },
    "準注意団体-CN":{
        '平異会':"平異会",
        '房先生':"房先生",
        '世界ドカーン連合':"世界ドカーン連合"
    },
    "正要注意団体-FR":{
            '星警隊':"フランス国家星警隊",
            '貴族たち':"ヒューマニストの貴族たち",
            'ネモ・アンド・ノーチラス':"ネモ・アンド・ノーチラス",
            'リュミエール騎士団':"リュミエール騎士団",
            'プリモルディアル':"プリモルディアル",
            'saphir':"神秘主義終焉のための無神論者協会(SAPHIR)",
            'ユニヴェルジル':"ユニヴェルジル王国"
    },
    "正要注意団体-PL":{
            'アーガス':"A.R.G.U.S.株式会社",
            'ショパン・カルト':"ショパン・カルト",
            'pzga':"ポーランド特異茸狩協会(PZGA)",
            '荘厳住宅':"有限会社荘厳住宅",
            'www':"www"
    },
    "準注意団体-PL":{
        'cbsp':"ポーランド異常事例中央総局(CBSP)"
    },
    "正要注意団体-ES":{
            'アンタレス協会':"人類精神再生の為のアンタレス協会",
            '偉大なる緑の神':"偉大なる緑の神のカルト",
            '特別保安局':"特別保安局",
            'mac':"キューバ国家対異省(MAC)"
    },
    "正要注意団体-TH":{
            'ノウイング出版':"ノウイング出版",
            'シビリアン':"ザ・シビリアン",
            'ロイヤーズ':"大富豪ミスター・ロイヤーズ",
            'ミュータント協会':" ミュータント協会",
            '黒魔力師連盟':"黒魔力師連盟",
            '音楽審美学':"音楽審美学"
    },
    "正要注意団体-DE":{
            '第25局':"第25局",
            'caecus-c':"カエクス・カーネリアナ・コレクティブ",
            'imbw':"ヒト教育開発研究機構(IMBW)",
            '魔術師学会':"魔術師学会",
            'ラプターテック':"ラプターテック・インダストリーズ",
            '4-r':"第四帝国",
            'mm-wk':"驚異の小部屋"
    },
    "準注意団体-DE":{
        '人類復興イニシアチブ':"人類復興イニシアチブ",
        '反ヒト派':"反ヒト派",
        'psw':"汎スラヴ抵抗運動(VSO/PSW)"
    },
    "正要注意団体-IT":{
            'ccsg':"聖ジョルジオ騎士信心会",
            'cfo':"オカルトファシスト評議会",
            'madao':"メディチ神秘芸術学会",
            'ridia':"イタリア王立異常事例研究院"
    },
    "正要注意団体-UA":{
            '輝かしき王':"輝かしき王",
            'ロボット共和国':"ロボット共和国",
            '絶滅主義':"絶滅主義(アニヒリズム)",
            'sbu-異常対策部':"ウクライナ保安庁異常対策部",
            'pora':'政治結社ルフ・"アングリフ" (P.O.R.A.)'
    },
    "正要注意団体-PT":{
            'ブラジル超常現象監督局':"ブラジル超常現象監督局",
            '異常科学アカデミー':"異常科学アカデミー",
            'テクノタウマトルゴス':"テクノタウマトルゴス",
            '塔と勇気の騎士団':"塔と勇気の騎士団",
            'レリカリオ':"レリカリオ",
            '動植物狩猟クラブ':"動植物狩猟クラブ",
            'アノニマス・アイズ':"有限会社アノニマス・アイズ"
    },
    "正要注意団体-ZH":{
            '繁広':"繁広化工",
            '木易':"木易蔵書閣",
            '第八処':"中華民国国家安全局第八処",
            '洗濯部門':"洗濯部門",
            '零号専隊':"零号専隊",
            'ツァーリの賢人団':"ツァーリの賢人団",
            '投鈴者':"投鈴者",
            'コブウェブ・インターナショナル':"コブウェブ・インターナショナル",
            '遠己':"遠己生医集団",
            '和朝義':"和朝義",
            '民異署':"民異署"
    },
    "準注意団体-ZH":{
        '永衡教会':"永衡教会",
        '新四山小学校':"新四山小学校",
        'ロフィア':"ロフィア工芸社",
        '天已堂':"天已堂"
    },
    "他支部の要注意団体":{
            'ハイヴ':"ザ・ハイヴ(INT)"
    }
};

var SubOrganizations={
    "部門-EN":{
        '怪奇部門':"怪奇部門",
        '解体部門':"解体部門",
        '倫理委員会':"倫理委員会",
        '神話・民俗学部門':"神話・民俗学部門",
        '誤伝達部門':"誤伝達部門",
        '超現実部門':"超現実部門",
        '戦術神学部門':"戦術神学部門",
        '電気通信監視室':"電気通信監視室"
    },
    "部隊-EN":{
        'タウ-5-サムサラ':"タウ-5-サムサラ"
    },
    "部門-JP":{
        '形式部門':"形式部門",
        '対話部門':"対話部門"
    },
    "フロント-JP":{
        'プリチャード学院':"プリチャード学院"
    },
    "部門-KO":{
        '巫俗部門':"巫俗部門",
        '存在論部門':"存在論部門",
        'woi研究課':"woi研究課"
    },
    "部門-ZH":{
        '三垣':"三垣"
    }
};

var Characters={
    "キャラクター-EN":{
        '8-ボール':"8-ボール",
        'aaron-siegel':"アーロン・シーゲル/アーロン・シーガル",
        'アベル':"アベル",
        'エージェント・グリーン':"エージェント・グリーン",
        'エージェント・カズマレク':"エージェント・トラヴィス・カズマレク",
        'エージェント・ラフェリエール':"エージェント・ラフェリエール",
        'エージェント・ラメント':"エージェント・ラメント",
        'エージェント・ラーク':"エージェント・ラーク",
        'エージェント・メルロ':"エージェント・サシャ・メリオ",
        'エージェント・ポペスク':"エージェント・ルクレティア・ポペスク",
        'エージェント・ナヴァッロ':"エージェント・ダニエル・ナヴァッロ",
        'エージェント・ストレルニコフ':"エージェント・ストレルニコフ",
        'エージェント・トラウス':"エージェント・トラウス",
        'エージェント・ヨリック':"エージェント・ヨリック・エルロイ",
        'アルドン':"アルドン",
        'アレクサンドラ':"アレクサンドラ",
        'アレクセイ・ベリトロフ':"アレクセイ・ベリトロフ",
        'scp-343':"SCP-343",
        'ベイリー三兄弟':"ベイリー三兄弟",
        'ビッグチーズ・ホレス':"ビッグチーズ・ホレス。",
        'ピエロのボブル':"ピエロのボブル",
        'bones':"Bones",
        'ブレイニー・ブライアン':"ブレイニー・ブライアン",
        'カイン':"カイン",
        'チャズ・アンブローズ':"チャズ・アンブローズ",
        '従兄弟のジョニー':"従兄弟のジョニー",
        'd-7294':"D-7294",
        'd-11424':"D-11424",
        'dado':"dado",
        'd.c.アルフィーネ':"D.C.al Fine",
        'アクタス管理官':"サイト管理官アクタス",
        'ボールド管理官':"カル・ボールド管理官",
        'ディアギレフ管理官':"ルスラフ・ディアギレフ管理官",
        'ガレスピー管理官':"ガレスピー管理官",
        'マッキンス管理官':"アラン・J・マッキンス管理官",
        'マックティリス管理官':"ケイト・マックティリス管理官",
        'ムース管理官':"ムース管理官",
        'ラグー管理官':"ポール・ラグー管理官",
        'ジャンゴ・ブリッジ博士':"ジャンゴ・ブリッジ博士",
        'アシュワース博士':"ダニエル・アシュワース博士",
        'ブランク博士':"ハロルド・R・ブランク博士",
        'ブライト博士':"ブライト博士",
        'シメリアン博士':"シメリアン博士",
        'クレフ博士':"クレフ博士",
        'ダン博士':"ダン博士",
        'エジソン博士':"エジソン博士",
        'エリオット博士':"チェルシー・エリオット博士",
        'エバーウッド博士':"エバーウッド博士",
        'フィネガン博士':"フィネガン博士",
        'ギアーズ博士':"ギアーズ博士",
        'ジェラルド博士':"ジェラルド博士",
        'グラス博士':"グラス博士",
        'doctor-heiden':"フレドリック・ハイデン博士/ヘイデン博士",
        'ホイガル博士':"ホイガル博士",
        'アイスバーグ博士':"アイスバーグ博士",
        'キング博士':"キング博士",
        'コンドラキ博士':"コンドラキ博士",
        'ライト博士':"ライト博士",
        'リリハンメル博士':"リリハンメル博士",
        'マン博士':"マン博士",
        'マクドクトラート博士':"プレースホルダー・マクドクトラート博士",
        'レインデルス博士':"イルゼ・レインデルス博士",
        'ライツ博士':"ライツ博士",
        'リベラ博士':"ジェシー・リベラ博士",
        'ロジェ博士':"ロジェ博士",
        'シンクレア博士':"シンクレア博士",
        'ソーツ博士':"ソーツ博士",
        'ドクター・スパンコ':"ドクター・スパンコ",
        'ヴァン博士':"S.ヴァン博士",
        'ウェトル博士':"ウィリアム・ウォレス・ウェトル博士",
        'ドンクマン':"ユリシーズ・B・ドンクマン",
        'ドレイヴン・コンドラキ':"ドレイヴン・コンドラキ",
        'エリック':"エリック",
        'エスター・コーガン':"エスター・コーガン",
        'フェオウィン・ウィルソン':"フェオウィン・ウィルソン",
        'フィネガン':"フィネガン",
        'フレッド':"フレッド",
        'バウ将軍':"バウ将軍",
        'グラソン':"グラソン",
        'グラブノック':"SCP-507 (グラブノック・ザ・デストロイヤー)",
        '崇高なるカルキスト・イオン':"崇高なるカルキスト・イオン",
        'ハリーナ・イエヴァ':"ハリーナ・イエヴァ",
        '吊られた王':"吊られた王",
        '不死身の爬虫類':"不死身の爬虫類",
        'ヘザー・メイソン':"ヘザー・メイソン",
        'ホリィ・ライト':"ホリィ・ライト",
        'イッキィ':"イッキィ",
        'アイリス・ダーク':"アイリス・ダーク",
        'アイリス・トンプソン':"アイリス・トンプソン",
        'イザベル五世':"イザベル五世",
        'jockjamsvol6':"jockjamsvol6",
        'ジュード・クライヨット':"ジュード・クライヨット",
        'ジュディス・ロゥ博士':"ジュディス・ロゥ博士",
        'ジュディ・パピル':"ジュディ・パピル",
        'ケイン・パトス・クロウ':"ケイン・パトス・クロウ",
        'ケネス・スペンサー':"ケネス・スペンサー",
        'kindness':"A kind man",
        'レガーテ・トラニオン':"レガーテ・トラニオン",
        'レスリー':"レスリー",
        'ルウィット・ザイリ・ファミリー':"ルウィット・ザイリ・ファミリー",
        'ロンバルディ':"エージェント・ロンバルディ",
        'マニー':"マニー",
        'マリア・ジョーンズ':"RAISAのマリア・ジョーンズ",
        'マリオン・ホイーラー':"マリオン・ホイーラー",
        'マーク・桐生':"桐生研究所のマーク・桐生",
        'ムーン・チャンピオン':"ムーン・チャンピオン",
        'ミスター・おさかな':"ミスター・おさかな",
        'パングロス':"パングロス",
        'ペスト医師':"ペスト医師",
        '取り憑くマスク':"取り憑くマスク",
        'professor-bjornsen':"ビヨンセン/ビョルンセン教授",
        'ライナー・ミラー':"ライナー・ミラー",
        'コーンウェル研究員':"ジェイコブ・コーンウェル研究員",
        'ジェームズ研究員':"ジェームズ研究員",
        'researcher-labelle':"ラベル研究員/ラブレ研究員",
        'ロイド研究員':"ロイド研究員",
        'ローゼン研究員':"デイヴィッド・ローゼン研究員",
        'スモールズ研究員':"スモールズ研究員",
        'タローラン研究員':"タローラン研究員",
        'リチャード・チャペル':"リチャード・チャペル",
        'リーヴィン・マーサー':"キリュウ研究所のリーヴィン・マーサー",
        'ロバート・ブマロ':"ロバート・ブマロ",
        'ロビン・ソーン':"ロビン・ソーン",
        'ルイス・デュシャン':"ルイス・デュシャン",
        '聖ヘドウィグ':"聖ヘドウィグ",
        'saturn-deer':"saturn-deer",
        'scarlet-king':"scarlet-king",
        'シェルドン・カッツ':"シェルドン・カッツ",
        'シャイガイ':"シャイガイ",
        'シガーロス':"シガーロス・ステファンズドッティル",
        'サイモン・ピエトリカウ':"サイモン・ピエトリカウ",
        'シャンク博士':"シャンク博士",
        '管理者':"管理者",
        'エンジニア':"エンジニア",
        'オールドマン':"オールドマン",
        'scp-173':"SCP-173",
        'the-specter':"The Specter",
        'ティロ・ツウィスト':"ティロ・ツウィスト",
        'ティム・ウィルソン':"ティム・ウィルソン",
        'ベロニカ・フィッツロイ':"ベロニカ・フィッツロイ",
        'ヴィンセント・アンダーソン':"ヴィンセント・アンダーソン",
        'ジン・桐生':"ジン・桐生研究員"
    },
    "キャラクター-JP":{
        'アイランズ調停官':"アイランズ調停官",
        'アヒージョ':"アヒージョ",
        '雨霧拷問官':"雨霧拷問官",
        '天宮博士':"天宮博士",
        '日奉茜':"日奉茜",
        '日奉薮':"日奉薮",
        '凍霧陽':"凍霧陽",
        'ウェイター':"ウェイター",
        '宇喜田博士':"宇喜田博士",
        'エージェント・蒼井':"エージェント・蒼井",
        'エージェント・イヴァノフ':"エージェント・イヴァノフ",
        'エージェント・斑鳩':"エージェント・斑鳩",
        'エージェント・育良':"エージェント・育良",
        'エージェント・応神':"エージェント・応神",
        'エージェント・上波':"エージェント・上波",
        'エージェント・海野':"エージェント・海野",
        'エージェント・来栖':"エージェント・来栖",
        'エージェント・西塔':"エージェント・西塔",
        'エージェント・桜庭':"エージェント・桜庭",
        'エージェント・差前':"エージェント・差前",
        'エージェント・井戸田':"エージェント・井戸田",
        'エージェント・谷崎':"エージェント・谷崎",
        'エージェント・戸神':"エージェント・戸神",
        'エージェント・那澤なごむ':"エージェント・那澤なごむ",
        'エージェント・亦好':"エージェント・亦好",
        'エージェント・斑座':"エージェント・斑座",
        'エージェント・ヤマトモ':"エージェント・ヤマトモ",
        'エージェント・許':"エージェント・許さん",
        'scp-014-jp-ex-1':"SCP-014-JP-EX-1",
        'scp-014-jp-j':"SCP-014-JP-J",
        'scp-210-jp':"SCP-210-JP",
        'scp-964-jp':"SCP-964-JP",
        'scp-1134-jp':"scp-1134-jp",
        'scp-2050-jp-a':"SCP-2050-JP-A",
        '大和博士':"大和博士",
        '御先管理員':"御先管理員",
        '鬼食料理長':"鬼食料理長",
        '御蓮寺恋治':"御蓮寺恋治",
        'カイ':"カイ",
        '隠し包丁のスニーク':"隠し包丁のスニーク",
        '金崎研究員':"金崎研究員",
        '神山博士':"神山博士",
        'カメラマン・甘梨':"カメラマン・甘梨",
        '神恵研究員':"神恵研究員",
        '茅野博士':"茅野博士",
        'karkaroff':"karkaroff",
        '川獺丸従業員':"川獺丸従業員",
        '串間保育士':"串間保育士",
        'くだん・バンシー':"くだん・バンシー",
        '久能尚史':"久能尚史",
        '桑名博士':"桑名博士",
        '咬冴隊員':"咬冴隊員",
        '犀賀六巳':"犀賀六巳",
        '西行':"西行",
        'しぃカウンセラー':"しぃカウンセラー",
        '諸知博士':"諸知博士",
        '白子博士':"白子博士",
        '寿司の意思':"寿司の意思",
        '角宇野記録官':"角宇野記録官",
        'タカオ':"タカオ",
        'ダチュラ':"黒の女王・ダチュラ",
        '田中先生':"田中先生",
        '津軽みのり':"津軽みのり",
        '土橋博士':"土橋博士",
        'd-2930':"d-2930",
        '出刃包丁のウィーク':"出刃包丁のウィーク",
        '天王寺博士':"天王寺博士",
        '道策管理官':"道策管理官",
        'ドクター・トラヤー':"ドクター・トラヤー",
        '虎屋博士':"虎屋博士",
        '鳴蝉博士':"鳴蝉博士",
        '難波謙司':"難波謙司",
        '鵺-斎宮':"鵺-斎宮",
        'ねこです':"ねこ",
        '橋ヶ谷研究員':"橋ヶ谷研究員",
        '波戸崎研究員':"波戸崎研究員",
        '広末サマンサ':"広末・ゴールウェイ・サマンサ",
        '広末孝行':"広末孝行",
        '吹上人事官':"吹上人事官",
        '福路捜索部隊長':"福路捜索部隊長",
        '骨折博士':"骨折博士",
        '前原博士':"前原博士",
        '真北研究員':"真北研究員",
        'マックス':"マックス",
        '三国技師':"三国技師",
        '飯尾博士':"飯尾博士",
        '萌里菻':"萌里菻",
        '闇親方':"闇親方"
    },
    "キャラクター-FR":{
       'フロッグ博士':"フロッグ博士"
    },
    "キャラクター-ES":{
        'アンドレス・モンドラゴン':"アンドレス・モンドラゴン研究員",
        'ダンテ':"ダンテ",
        'ルイサ・ヴァンデル':"ルイサ・ヴァンデル",
        'マクシムス':"マクシムス"
    },
    "キャラクター-TH":{
        'トムソン&フェイマス':"トムソン博士とフェイマス博士"
    },
    "キャラクター-DE":{
        'エージェント・ピーターソン':"エージェント・アリス・ピーターソン",
        'ファウスト博士':"ステファン・ファウスト博士"
    },
    "キャラクター-UA":{
        'ad渉外長':"A.D.渉外長",
        'r博士':"R████博士"
    },
    "キャラクター-ZH":{
        'クリス博士':"クリス博士",
        '張道士':"張道士"
    }
};

var Locations={
    "要注意領域-EN":{
        'アラガッダ':"アラガッダ",
        'バックドア・ソーホー':"バックドア・ソーホー",
        'エスターバーグ':"エスターバーグ",
        "ユーテック":"ユーテック",
        'ハイ・ブラジル':"ハイ・ブラジル",
        'ラ・リュー・マカーブラー':"ラ・リュー・マカーブラー",
        'スリー・ポートランド':"スリー・ポートランド",
        '放浪者の図書館':"放浪者の図書館"
    },
    "要注意領域-JP":{
        '恋昏崎':"恋昏崎",
        '穴蔵':"穴蔵",
        'シガスタン':"シガスタン",
        'サミオマリエ':"サミオマリエ",
        '遠野妖怪保護区':"遠野妖怪保護区"
    },
    "要注意領域-KO":{
        '霧津':"霧津"
    },
    "要注意領域-CN":{
        '香城':"香城"
    },
    "セキュリティ施設-CN":{
        'モバイル-サイト-cn':"モバイル-サイト-CN",
        'サイト-cn-02':"サイト-CN-02",
        'サイト-cn-03':"サイト-CN-03",
        'サイト-cn-06':"サイト-CN-06",
        'サイト-cn-19':"サイト-CN-19",
        'サイト-cn-21':"サイト-CN-21",
        'サイト-cn-34':"サイト-CN-34",
        'サイト-cn-71':"サイト-CN-71",
        'サイト-cn-75':"サイト-CN-75",
        'サイト-cn-82':"サイト-CN-82",
        'サイト-cn-91':"サイト-CN-91",
        'エリア-cn-07':"エリア-CN-07"
    },
    "セキュリティ施設-FR":{
        'サイト-aleph':"サイト-Aleph",
        'サイト-ayin':"サイト-Ayin",
        'サイト-beth':"サイト-Beth",
        'サイト-ghimel':"サイト-Ghimel",
        'サイト-he':"サイト-He",
        'サイト-kybian':"サイト-Kybian",
        'サイト-tav':"サイト-Tav",
        'サイト-yod':"サイト-Yod",
        'サイト-zayin':"サイト-Zayin",
        'エリア-mem':"エリア-Mem"
    },
    "要注意領域-ZH":{
        '新茶嶺':"新茶嶺"
    },
    "セキュリティ施設-ZH":{
        'エリア-shell':"エリア-Shell",
        'サイト-zh-02':"サイト-ZH-02",
        'サイト-zh-12':"サイト-ZH-12",
        'サイト-zh-16':"サイト-zh-16",
        'サイト-zh-25':"サイト-ZH-25",
        'サイト-zh-26':"サイト-ZH-26",
        'サイト-zh-31':"サイト-ZH-31"
    }
};

var Events={
    "コンテスト-EN":{
        '1000':"SCP-1000コンテスト",
        '2000':"SCP-2000コンテスト",
        '3000':"SCP-3000コンテスト",
        '4000':"SCP-4000コンテスト",
        '5000':"SCP-5000コンテスト",
        '6000':"SCP-6000コンテスト",
        "7000":'SCP-7000コンテスト',
        'af2016':"Crack Fictionコンテスト",
        'art2017':"ソーシャルメディアアートコンテスト",
        'canon2020':"カノン復興コンテスト",
        'cliche2019':"クリシェコンテスト2019",
        'collab-con2019':"Collaboration Contest",
        'cupid2021':"キューピッドコンテスト2021",
        'd-con2016':"Dクラスコンテスト",
        'dc2014':"ディストピアコンテスト",
        'departmentcon2022':"2022年部門コンテスト",
        'doomsday2018':"終末の日コンテスト",
        'exquisite-corpse2020':"優美な屍骸コンテスト",
        'five-questions':"5つの謎コンテスト",
        'gbc09':"2009年ギアーズ博士の誕生日コンテスト",
        'goi2014':"2014年要注意団体コンテスト",
        'halloween2018':"ハロウィンコンテスト2018",
        'hc2012':"2012 Halloween Contest",
        'hiscon2017':"2017年歴史コンテスト",
        'jam-con2018':"2018年72時間ジャムコンテスト",
        '_マーダーミステリー':"2018年72時間ジャムコンテスト一日目お題",
        '_トロピカル':"2018年72時間ジャムコンテスト二日目お題",
        '_暗い嵐の夜':"2018年72時間ジャムコンテスト三日目お題",
        'jam-con2019':"2019年144時間ジャムコンテスト",
        '_シャギードッグ':"2019年144時間ジャムコンテスト一日目お題",
        '_パルプ・フィクション':"2019年144時間ジャムコンテスト二日目お題",
        '_全ては夢':"2019年144時間ジャムコンテスト三日目お題",
        'jam-con2020':"2020年144時間ジャムコンテスト",
        '_大爆発':"2020年144時間ジャムコンテスト一日目お題",
        '_美味しい':"2020年144時間ジャムコンテスト二日目お題",
        '_見た目以上':"2020年144時間ジャムコンテスト三日目お題",
        'jam-con2021':"2021年度72時間ジャムコンテスト",
        '_海':"2021年度72時間ジャムコンテスト一日目お題",
        '_腐敗':"2021年度72時間ジャムコンテスト二日目お題",
        '_有名フラグ':"2021年度72時間ジャムコンテスト三日目お題",
        'mtf2016':"2016年機動部隊コンテスト",
        'nyc2013':"2013 New Year's Canon Contest",
        'rei2015':"Reimagining Contest",
        'sc2015':"2015年ショートワークスコンテスト",
        'tc2013':"Time Contest",
        'uac2014':"正しく評価されていないSCPコンテスト",
        'memecon2021-unofficial':"非公式2021年ミームコンテスト"
    },
    "その他イベント-EN":{
        '173fest':"10 Years Birthday SCParty",
        'art-exchange':"Annual Holiday Art Exchange",
        'af2014':"Super Cute Pets!",
        'game-day':"Game Day",
        'nightmarefest':"非公式ナイトメアフェスト",
        '_タウンハウス':'非公式ナイトメアフェストのお題"タウンハウス"',
        '_お役人':'非公式ナイトメアフェストのお題"お役人"',
        '_夜勤':'非公式ナイトメアフェストのお題"夜勤"'
    },
    "コンテスト-JP":{
        '173jp':"SCP-173-JPコンテスト",
        'フォトコンテスト':"SCP財団日本設立一周年記念フォトコンテスト",
        '2014scp-jp-hw':"2014ハロウィン企画",
        '無名職員は語る':"tale大会「無名職員は語る」",
        '2周年goiコンテスト':"SCP財団Wiki設立二周年企画 「要注意団体コンテスト」",
        '2周年goiコンテスト遅刻投稿':"SCP財団Wiki設立二周年企画 「要注意団体コンテスト」-遅刻投稿",
        '2016イラストコンテスト':"3周年記念イラストコンテスト",
        '財団夏祭り':"財団夏祭り",
        '1000jp':"SCP-1000-JPコンテスト",
        '財団職員the-origin':"年末年始Taleコンテスト「財団職員 the Origin」",
        '新人執筆者コンテスト':"新人執筆者コンテスト",
        'cross17jp':"クロスコンテスト'17",
        'デスコン17':"4年目の死のコンテスト",
        '1600字17':"1600文字コンテスト",
        'recyclecon17':"リサイクルコンテスト2017",
        'recyclecon17遅刻組':"リサイクルコンテスト2017遅刻組",
        'ベンチャーコンテスト':"ベンチャーコンテスト2018",
        'ワルコン18':"5年目の悪のコンテスト",
        'bbc18':"棍棒での殴り合いコンテスト",
        'リサイクル2019':"リサイクルコンテスト2019",
        '1200字19':"1200字掌編企画2019",
        '無コン19':"6年目の無のコンテスト",
        'ジャムコン2019':" 72時間ジャムコンテストJP-2019",
        '2000jp':"SCP-2000-JPコンテスト",
        'ルーキーコンテスト':"ルーキーコンテスト",
        '嘘コン20':"嘘のコンテスト2020",
        'チームコン20':"チームコンテスト2020",
        '財団職員id':"Taleコンテスト「財団職員 The Identity」 ",
        '素手喧嘩コン21':"素手喧嘩コンテスト2021",
        '三題噺言霊競演21':"令和三年度三題噺言霊競演",
        '夜コン21':"夜のコンテスト2021",
        'リサイクル2021':"リサイクルコンテスト2021",
        'わかばコンテスト':"わかばコンテスト",
        'qコン22':"Qのコンテスト2022",
        '3000jp':"SCP-3000-JPコンテスト"
    },
    "キャンペーン-JP":{
        '非公式800字掌編企画':"非公式800字tale参加作品",
        '2014年年末企画':"2014年大晦日企画",
        '2015年末終末記事大会':"2015年末　終末記事企画！」",
        'af2016-jp':"2016エイプリルフール",
        '非公式1200字掌編企画':"非公式1200字掌編企画",
        'コトダマtale祭り':"コトダマTale祭り",
        'af2017':"2017エイプリルフール",
        'ハロウィン2017':"ハロウィン「ミニ」コンテスト2017",
        'af2018':"2018エイプリルフール",
        '5周年記念aw企画':"5周年記念アートワーク企画",
        'af2019':"2019エイプリルフール",
        'af2020':"2020エイプリルフール",
        'クロスリンクキャンペーン':"クロスリンクキャンペーン",
        'af2021':"2021エイプリルフール",
        'お団子21':"十五夜お団子フェスティバル2021",
        'お見合い2021':"財団日本支部お見合い計画2021",
        'af2022':"2022エイプリルフール"
    },
    "コンテスト-KO":{
        '2015財団放送コンテスト':"2015財団放送コンテスト",
        '2016-漫画コンテスト':"2016財団漫画コンテスト",
        '2017-世界滅亡コンテスト':"2017-世界滅亡コンテスト",
        '2018-短編コンテスト':"2018短編コンテスト",
        '2018-犯罪コンテスト':"犯罪コンテスト",
        '2020-04コンテスト':"2020年度隔月コンテスト 4月度部門",
        '2020-10コンテスト':"2020年度隔月コンテスト 10月度部門",
        '2020-メタタイトルコンテスト':"2020年メタタイトルコンテスト"
    },
    "その他イベント-KO":{
        '2012-devan-誕生日祝典':"誕生日祝典 - Devan"
    },
    "コンテスト-CN":{
        'cn1000':"SCP-CN-1000 流伝 コンテスト",
        '春節コンテスト':"春節Taleコンテスト",
        '2014夏休みコンテスト':"2014夏休み“马上回来”コンテスト",
        '2015夏季コンテスト':"平行世界の財団コンテスト",
        '2017冬季コンテスト':"記憶処理コンテスト",
        '2018冬季コンテスト':"2018春節看図執筆コンテスト",
        '2019新人コンテスト':"2019新人コンテスト",
        '2020冬季コンテスト':"2020冬季“获奖感言”コンテスト",
        '2020画廊コンテスト':"2020画廊コンテスト",
        '2020夏季コンテスト':'2020夏季"古代伝説"コンテスト',
        '2021新人コンテスト':"2021新人コンテスト",
        "2021反復コンテスト":'2021反復原稿募集コンテスト',
        'cn2000':"SCP-CN-2000 不確実 コンテスト",
        '2022デジタルゲームコンテスト':"2022デジタルゲームコンテスト"
    },
    "プロジェクト-CN":{
        '秦漢財団':'2017ハロウィンイベント"秦漢財団"',
        '看図説話-薫衣草':"看図説話-薫衣草",
        '看図説話-香蒲':"看図説話-香蒲",
        '看図説話-粉蝶花':"看図説話-粉蝶花",
        '看図説話-鬼百合':"看図説話-鬼百合",
        '2020愚人コンテスト':"2020年WAIFUコンテスト"
    },
    "コンテスト-FR":{
        'c2fr2014':"財団フランス支部2周年のコンテスト",
        'c3fr2015':"フランス支部3周年のコンテスト",
        '500語未満コンテスト':"500語未満コンテスト",
        'c4fr2016':"4周年のコンテスト",
        'nme2017':"コンテスト:我々の最高の敵",
        'c5fr2017':"5周年のコンテスト",
        'c6fr2018':"6周年のコンテスト",
        'xks2018':"Concours : Une Brève Histoire du XKe siècle",
        'ch2019':"Concours d'Halloween",
        'c8fr2020':"8周年のコンテスト",
        'c404fr':"ERREUR(フランス支部404周年コンテスト)"
    },
    "コンテスト-ES":{
        'concurso-scp-2016':"新コンテスト: SCP-ES執筆",
        'es100':"SCP-ES-100コンテスト",
        'exploracion2019':"2019年探査コンテスト",
        'es200':"SCP-ES-200コンテスト"
    },
    "コンテスト-DE":{
        'scp-100-de':"SCP-100-DE:コンテスト",
        'scp-200-de':"SCP-200-DE:コンテスト",
        'goiコンテスト':" GoIコンテスト2017",
        'halloween-19-de':"ハロウィンコンテスト2019",
        'halloween-20-de':"ハロウィンコンテスト2020",
        'valentinstag2021':"バレンタインデーイベント2021"
    },
    "コンテスト-PT":{
        '歴史コンテスト':"2020年の歴史コンテスト"
    },
    "コンテスト-CS":{
        'csコンテスト1':"SCP-CSコンテスト1",
        'csコンテスト2':"SCP-CSコンテスト2",
        'csコンテスト3':"SCP-CSコンテスト3",
        'csコンテスト4':"SCP-CSコンテスト4",
        'csコンテスト5':"SCP-CSコンテスト5"
    },
    "コンテスト-ZH":{
        '2019回憶コンテスト':"2019回憶コンテスト"
    },
    "プロジェクト-ZH":{
        '2020金字塔登り':"集まれ！金字塔登攀隊",
        '2020聖夜相守':"聖夜相守 - もう一夜"
    },
    "他支部のイベント":{
        'goi2019':"インターナショナルGoIコンテスト2019(INT)",
        'halloween-2019':"ハロウィン2019(EL)",
        '1stanniv':"一周年記念コンテスト(ID)",
        'contest-j-1-2019':"”SL-J 2019”コンテスト(SL)"
    }
};

/*第1カテゴリー登録
形式は
カテゴリ名:{
    <実際に検索するタグ名>　: <検索フォーム表示名>
}
です。ただし第2カテゴリである場合は
カテゴリ名:<上記で作成した第2カテゴリの変数>
という形式で登録してください*/

var FirstCategory={
    "メジャー":majorTags,
    "オブジェクトクラス":{
        'safe':'safe',
        'euclid':'euclid',
        'keter':'keter',
        'thaumiel':'thaumiel',
        'neutralized':'neutralized',
        'apollyon':'apollyon',
        'archon':'archon',
        'esoteric-class':'esoteric-class'
        },
    "アトリビュート(生物)":AttributeCreature,
    "アトリビュート(科学)":AttributeScience,
    "アトリビュート(その他)":AttributeOthers,
    "GoIフォーマット":GoIFormat,
    "コンテンツマーカー":ContentsMarker,
    "支部":branchTags,
    "ウィキ運営用":{
        '孤立':'孤立',
        '要翻訳':'要翻訳',
        '重訳':'重訳',
        'アーカイブ済み':'アーカイブ済み',
        '元記事削除':'元記事削除',
        '削除通知':'削除通知',
        '合作記事剪定通知':'合作記事剪定通知',
        '画像差し止め':'画像差し止め',
        '差し止め通知':'差し止め通知',
        '_イベント1':'_イベント1',
        '_イベント2':'_イベント2',
        '_イベント3':'_イベント3',
        '_イベント4':'_イベント4',
        '外部連携':'外部連携'
        },
    "シリーズ":Series,
    "要注意団体":GroupsOfInterest,
    "財団下部組織":SubOrganizations,
    "キャラクター":Characters,
    "ロケーション":Locations,
    "イベント":Events,
}

[[/code]]

支部及び支部別のタグの設定
[[code type="javascript"]]
var SearchSettingParam = new Object();

SearchSettingParam.LocalTags = new Object();
SearchSettingParam.BranchData = new Object();
SearchSettingParam.RecentlyTagData = new Object();
SearchSettingParam.getBranchByTag;

//-----------------設定--------------------


//記事フォーマットタグの登録
SearchSettingParam.LocalTags = ["scp", "tale", "著者ページ", "goi-format", "アートワーク"]

//各支部のメインURL及び国旗などの設定

SearchSettingParam.BranchData.en = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/us.png",
     url:"http://www.scp-wiki.net/",
     symbol:"",
     createSource:true
    };

SearchSettingParam.BranchData.ru = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/ru.png",
     url:"http://scpfoundation.ru/",
     symbol:"RU",
     createSource:true
    };

SearchSettingParam.BranchData.ko = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/kr.png",
     url:"http://ko.scp-wiki.net/",
     symbol:"KO",
     createSource:true
    };
    
SearchSettingParam.BranchData.cn = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/cn.png",
     url:"http://scp-wiki-cn.wikidot.com/",
     symbol:"CN",
     createSource:true
    };
    
SearchSettingParam.BranchData.fr = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/fr.png",
     url:"http://fondationscp.wikidot.com/",
     symbol:"FR",
     createSource:true
    };
    
SearchSettingParam.BranchData.pl = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/pl.png",
     url:"http://scp-pl.wikidot.com/",
     symbol:"PL",
     createSource:true
    };
    
SearchSettingParam.BranchData.es = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/es.png",
     url:"http://lafundacionscp.wikidot.com/",
     symbol:"ES",
     createSource:true
    };
    
SearchSettingParam.BranchData.th = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/th.png",
     url:"http://scp-th.wikidot.com/",
     symbol:"TH",
     createSource:true
    };
    
SearchSettingParam.BranchData.jp = {
     flag:"http://scp-jp.wdfiles.com/local--files/main/jp.png",
     url:"http://scp-jp.wikidot.com/",
     symbol:"JP",
     createSource:false
    };

SearchSettingParam.BranchData.de = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/de.png",
     url:"http://scp-wiki-de.wikidot.com/",
     symbol:"DE",
     createSource:true
    };

SearchSettingParam.BranchData.it = {
     flag:"http://scp-jp.wdfiles.com/local--files/tag-search/it.png",
     url:"http://fondazionescp.wikidot.com/",
     symbol:"IT",
     createSource:true
    };

SearchSettingParam.BranchData.ua = {
     flag:"http://scp-jp.wdfiles.com/local--files/main/ua.png",
     url:"http://scp-ukrainian.wikidot.com/",
     symbol:"UA",
     createSource:true
    };

SearchSettingParam.BranchData.pt = {
     flag:"http://scp-jp.wdfiles.com/local--files/main/pt.png",
     url:"http://scp-pt-br.wikidot.com/",
     symbol:"PT",
     createSource:true
    };


//-----------------ここからは実際的な処理------------------------------

//支部が獲得できなかった時のダミー
SearchSettingParam.BranchData.undefinedDefault = {
     flag:"",
     url:"",
     createSource:false
}

SearchSettingParam.RecentlyTagData.reset = function(){
    SearchSettingParam.RecentlyTagData.Branch = "undefinedDefault";
    SearchSettingParam.RecentlyTagData.LocalTag = "";
    SearchSettingParam.RecentlyTagData.ActualTag = "";
}

SearchSettingParam.RecentlyTagData.reset();


//渡されたタグから支部を特定する
SearchSettingParam.getBranchByTag = function(tags){
    SearchSettingParam.RecentlyTagData.reset();
    var tagA = tags.split(" ");

    var branch = "undefinedDefault";
    for(var i in SearchSettingParam.BranchData){
      if(i == "undefinedDefault"){
        continue;
      }
      if(tagA.includes(i)){
        if(branch != "undefinedDefault"){
          SearchSettingParam.RecentlyTagData.reset();
          return "undefinedDefault";
        }
        branch = i;
        SearchSettingParam.RecentlyTagData.Branch = i;
      }
    }
    for(var i of SearchSettingParam.LocalTags){
      if(tagA.includes(i)){
        SearchSettingParam.RecentlyTagData.LocalTag = i;
      }
    }
    SearchSettingParam.RecentlyTagData.ActualTag = SearchSettingParam.RecentlyTagData.LocalTag + " (" + branch + ")";
    delete tagA;
    return branch;
}

//メモリ開放
window.addEventListener("beforeunload", function(){
    delete SearchSettingParam;
});

[[/code]]

--]

+ 追記編集ここまで
[[module css]]
th p {
display: inline !important;
}
.list-pages-item p {
display: inline !important;
}
.list-pages-item span {
display: inline-block !important;
}
.wiki-content-table {
display: none;
}
.objectColor {
display: none;
}
.pageNum span:nth-of-type(1) {
display: inline !important;
}
.datahtml .list-pages-item {
display: none !important;
}

#page-content > a:not(#edit-section-b-0){
display: none !important;
}
a#edit-section-b-0{
color: #FFFFFF !important;
}
a#edit-section-b-0:after{
content: "タグ一覧の編集を行う" !important;
color: #FF0000 !important;
}
#toc0{
display:none;
}
#toc1{
display:none;
}
[[/module]]
[[module ListPages range="." limit="@URL|0" urlAttrPrefix="list1"]]
[[%%content{0}%%module css]]
.object .explained {
font-size: 100% !important;
color: #77FFFF !important;
}
.object .esoteric-class {
font-size: 100% !important;
color: #777777 !important;
}
.object .safe {
font-size: 100% !important;
color: #00FF00 !important;
}
.object .euclid {
font-size: 100% !important;
color: #FFDD00 !important;
}
.object .keter {
font-size: 100% !important;
color: #FF0000 !important;
}
.object .thaumiel {
font-size: 100% !important;
color: #000000 !important;
}
.object .neutralized {
font-size: 100% !important;
color: #9900FF !important;
}
.object .apollyon {
font-size: 100% !important;
color: #FF00BF !important;
}
.object .archon {
font-size: 100% !important;
color: #0022FF !important;
}
.objectColor {
display: inline-block !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." limit="@URL|0" urlAttrPrefix="list2"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(2) {
display: none;
}
.wiki-content-table td:nth-of-type(2) {
display: none;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." limit="@URL|0" urlAttrPrefix="list3"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(3) {
display: none !important;
}
.wiki-content-table td:nth-of-type(3) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list4"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(4) {
display: none !important;
}
.wiki-content-table td:nth-of-type(4) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list5"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(5) {
display: none !important;
}
.wiki-content-table td:nth-of-type(5) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list6"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(6) {
display: none !important;
}
.wiki-content-table td:nth-of-type(6) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list7"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(7) {
display: none !important;
}
.wiki-content-table td:nth-of-type(7) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." limit="@URL|0" urlAttrPrefix="list8"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(8) {
display: none !important;
}
.wiki-content-table td:nth-of-type(8) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." limit="@URL|0" urlAttrPrefix="list9"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(9) {
display: none !important;
}
.wiki-content-table td:nth-of-type(9) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list10"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(10) {
display: none !important;
}
.wiki-content-table td:nth-of-type(10) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list11"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(11) {
display: none !important;
}
.wiki-content-table td:nth-of-type(11) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list12"]]
[[%%content{0}%%module css]]
.wiki-content-table th:nth-of-type(12) {
display: none !important;
}
.wiki-content-table td:nth-of-type(12) {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]
[[module ListPages range="." offset="@URL|0" urlAttrPrefix="list15"]]
[[%%content{0}%%module css]]
.uvdv {
display: none !important;
}
[[%%content{0}%%/module]]
[[/module]]

[[module ListPages range="." limit="@URL|0"]]
[[%%content{0}%%module css]]
.wiki-content-table {
display: inline-block !important;
}
.en .scp.en a img,
.en .tale.en a img,
.en .著者ページ.en a img,
.en .goi-format.en a img,
.en .アートワーク.en a img,
.ru .scp.ru a img,
.ru .tale.ru a img,
.ru .著者ページ.ru a img,
.ru .goi-format.ru a img,
.ru .アートワーク.ru a img,
.ko .scp.ko a img,
.ko .tale.ko a img,
.ko .著者ページ.ko a img,
.ko .goi-format.ko a img,
.ko .アートワーク.ko a img,
.cn .scp.cn a img,
.cn .tale.cn a img,
.cn .著者ページ.cn a img,
.cn .goi-format.cn a img,
.cn .アートワーク.cn a img,
.fr .scp.fr a img,
.fr .tale.fr a img,
.fr .著者ページ.fr a img,
.fr .goi-format.fr a img,
.fr .アートワーク.fr a img,
.pl .scp.pl a img,
.pl .tale.pl a img,
.pl .著者ページ.pl a img,
.pl .goi-format.pl a img,
.pl .アートワーク.pl a img,
.es .scp.es a img,
.es .tale.es a img,
.es .著者ページ.es a img,
.es .goi-format.es a img,
.es .アートワーク.es a img,
.th .scp.th a img,
.th .tale.th a img,
.th .著者ページ.th a img,
.th .goi-format.th a img,
.th .アートワーク.th a img,
.de .scp.de a img,
.de .tale.de a img,
.de .著者ページ.de a img,
.de .goi-format.de a img,
.de .アートワーク.de a img,
.it .scp.it a img,
.it .tale.it a img,
.it .著者ページ.it a img,
.it .goi-format.it a img,
.it .アートワーク.it a img,
.pt .scp.pt a img,
.pt .tale.pt a img,
.pt .著者ページ.pt a img,
.pt .goi-format.pt a img,
.pt .アートワーク.pt a img,
.ua .scp.ua a img,
.ua .tale.ua a img,
.ua .著者ページ.ua a img,
.ua .goi-format.ua a img,
.ua .アートワーク.ua a img{
font-size: 100% !important;
width: 16px !important;
height: 11px !important;
float: right !important;
}


[[%%content{0}%%/module]]
[[/module]]
[[=]]
[[span class="pageNum"]]
[[module ListPages separate="no" category="@URL|*" tags="@URL" created_at="@URL" updated_at="@URL" created_by="@URL" rating="@URL" votes="@URL" link_to="@URL" offset="@URL|0" name="@URL" limit="@URL|0" perPage="@URL|20" parent="@URL" order="@URL|created_at desc"]]
[[span style="display:none"]]%%total_or_limit%%ページがヒットしました。[[/span]]\
[[/module]]
[[module ListPages separate="no" category="@URL|*" tags="@URL" created_at="@URL" updated_at="@URL" created_by="@URL" rating="@URL" votes="@URL" link_to="@URL" offset="@URL|0" name="@URL" limit="@URL|0" perPage="@URL|20" parent="@URL" order="@URL|created_at desc" urlAttrPrefix="metatitle"]]
[[span style="display:none"]]%%total_or_limit%%ページがヒットしました。[[/span]]\
[[/module]]
[[/span]]
[[module ListPages separate="no" category="@URL|*" wrapper="no" tags="@URL" created_at="@URL" updated_at="@URL" created_by="@URL" rating="@URL" votes="@URL" link_to="@URL" offset="@URL|0" name="@URL" limit="@URL|0" perPage="@URL|20" parent="@URL" order="@URL|created_at desc"]]
[[head]]
[[table class="wiki-content-table"]]
[[row]][[hcell]]ページタイトル（原文リンク）[[/hcell]]
[[hcell]]ページ作成者[[/hcell]]
[[hcell]]作成日時[[/hcell]]
[[hcell]]最終更新者[[/hcell]]
[[hcell]]最終更新日時[[/hcell]]
[[hcell]]最終コメント者[[/hcell]]
[[hcell]]最終コメント日時[[/hcell]]
[[hcell]]ｺﾒﾝﾄ[[/hcell]]
[[hcell]]評価[[span class="uvdv"]](UV/DV)[[/span]][[/hcell]]
[[hcell]]文字数[[/hcell]]
[[hcell]]子ﾍﾟｰｼﾞ数[[/hcell]]
[[hcell]]ﾘﾋﾞｼﾞｮﾝ数[[/hcell]][[/row]]
[[/head]]
[[body]]
[[row]]
[[cell]][[span_]][[/span]]
%%index%%. [[span class="object"]][[span class="%%tags%%" style="font-size:0%"]]● [[/span]][[/span]][[span_]][[/span]]
%%title_linked%% [[span_]][[/span]]
[[span class="en"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/us.png link="http://www.scp-wiki.net/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="ru"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/ru.png link="http://scpfoundation.ru/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="ko"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/kr.png link="http://ko.scp-wiki.net/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="cn"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/cn.png link="http://scp-wiki-cn.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="fr"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/fr.png link="http://fondationscp.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="pl"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/pl.png link="http://scp-pl.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="es"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/es.png link="http://lafundacionscp.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="th"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/th.png link="http://scp-th.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="de"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/de.png link="http://scp-wiki-de.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="it"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/tag-search/it.png link="http://fondazionescp.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="ua"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/main/ua.png link="http://scp-ukrainian.wikidot.com/%%fullname%%"　width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[span class="pt"]][[span class="%%tags%%" style="font-size:0%"]][[image http://scp-jp.wdfiles.com/local--files/main/pt.png link="http://scp-pt-br.wikidot.com/%%fullname%%" width="0px" height="0px" alt="🔗"]][[/span]][[/span]][[span_]][[/span]]
[[/cell]]
[[cell]]%%created_by_linked%%[[/cell]]
[[cell]]%%created_at|%Y/%m/%d %H:%M %%[[/cell]]
[[cell]]%%updated_by_linked%%[[/cell]]
[[cell]]%%updated_at|%Y/%m/%d %H:%M %%[[/cell]]
[[cell]]%%commented_by_linked%%[[/cell]]
[[cell]]%%commented_at|%Y/%m/%d %H:%M %%[[/cell]]
[[cell]]%%comments%%[[/cell]]
[[cell]]%%rating%%[[span class="uvdv"]] (+[[#expr (%%rating_votes%%-%%rating%%)/2+%%rating%% ]]/-[[#expr (%%rating_votes%%-%%rating%%)/2 ]])[[/span]][[/cell]]
[[cell]]%%size%%[[/cell]]
[[cell]]%%children%%[[/cell]]
[[cell]]%%revisions%%[[/cell]][[/row]]
[[/body]]
[[foot]]
[[/table]]
[[/foot]]
[[/module]]
[[span class="objectColor"]]##00FF00|●##:safe    ##FFDD00|●##:euclid    ##FF0000|●##:keter    ##000000|●##:thaumiel    ##777777|●##:esoteric-class    ##77FFFF|●##:explained    ##9900FF|●##:neutralized    ##FF00BF|●##:apollyon    ##0022FF|●##:archon[[/span]]
[[/=]]
[!--
ページ名データ格納とリスト表示を行うhtmlブロックを生成するモジュールです。
--]
[[module ListPages range="." limit="@URL|0" urlAttrPrefix="metatitle"]]
[[%%content{0}%%module css]]
.pager {
display: none;
}
[[%%content{0}%%/module]]
[[div style="display:none"]]
[[%%content{0}%%html]]
<script type="text/javascript" src="http://scp-jp.wdfiles.com/local--code/scpauthorssearch/1"></script>
<script type="text/javascript">
var textB, textA, textL;
var alltext = new Array(2);
var finish = 0;

document.addEventListener("DOMContentLoaded",function(){
    alltext[0] = ["001", "Joke", "EX", "arc" ];
    alltext[1] = [];
    for(var i = 0; i < alltext[0].length; i++){
     alltext[1][i] = convURL(alltext[0][i]);
    }
    finish = 1;
});

function checkLoad(){
    return finish;
}

//内部リンク構文([[[ページ名]]])のURL変換
function convURL(cat){
    var container = document.getElementById(cat);
    if(container == null){
     return;
    }
    var fulltext = document.getElementById(cat).innerHTML;
    while(fulltext.indexOf("[[[") >= 0){
     textB = fulltext.substring(0, fulltext.indexOf("[[["));
     fulltext = fulltext.substring(fulltext.indexOf("[[[") + 2, fulltext.length);
     textA = fulltext.substring(fulltext.indexOf("]]]") + 3, fulltext.length);
     fulltext = fulltext.substring(0, fulltext.indexOf("]]]") + 1);
     if(fulltext.indexOf("|") >= 0){
     textL = fulltext.substring(fulltext.indexOf("|") , fulltext.length);
     fulltext =  fulltext.substring(0, fulltext.indexOf("|"));
     }else{
     textL = "";
     }
     fulltext = fulltext.toLowerCase();
     fulltext = fulltext.replace(/[^a-z0-9:\]\[]/g, "-");
     while(fulltext.indexOf("--") >= 0){
     fulltext = fulltext.replace( /--/g , "-" ) ;
     }
    fulltext = textB + fulltext + textL + textA;
    }
    while(fulltext.indexOf("/@/@") >= 0){
     fulltext = fulltext.replace( "/@/@" , "" ) ;
    }
    return fulltext;
}

function startSearch0(object, cat){
    for(var i = 0; i < alltext[0].length; i++){
     if(alltext[0][i] == cat){
     var fulltext = alltext[1][i];
     break;
     }
    }
    //改行までの切り出し
    var fulltextSmall = fulltext.toLowerCase();
    if(fulltextSmall.indexOf(object)>=0){
     //メタタイトルもしくはリンク構文にpagenameとは異なるscp番号が記述されていた場合を回避し、indexOfの値を取得す
     var resultTargetSCPExistArea = removeDummyNumber(object,fulltextSmall);
     var targetStartPoint = fulltextSmall.indexOf(resultTargetSCPExistArea.list);
     fulltext = fulltext.substring(fulltextSmall.indexOf(resultTargetSCPExistArea.list),fulltext.length);
     //上記の検索で得た結果を元に該当する行を切り離す
     fulltext = fulltext.substring(resultTargetSCPExistArea.index, fulltext.length);
     fulltext = fulltext.substring(0, fulltext.indexOf("\n"));
    
     //文字色付け
     while(fulltext.indexOf("##")>=0){
     var cuttext1 = fulltext.substr(0, fulltext.indexOf("##") + 2);
     var cuttext2 = fulltext.substr(fulltext.indexOf("##") + 2);
     cuttext1 = cuttext1.replace( "##" , "<span style='color: #" ) ;
     cuttext2 = cuttext2.replace( "|" , "'>" ) ;
     cuttext2 = cuttext2.replace( "##" , "</span>" ) ;
     fulltext = cuttext1 + cuttext2 ;
     }

     //取り消し線
     while(fulltext.indexOf("--")>=0){
     fulltext = fulltext.replace( "--" , "<span style='text-decoration: line-through;'>" ) ;
     fulltext = fulltext.replace( "--" , "</span>" ) ;
     }

     //ボールド
     while(fulltext.indexOf("**")>=0){
     fulltext = fulltext.replace( "**" , "<strong>" ) ;
     fulltext = fulltext.replace( "**" , "</strong>" ) ;
     }

     //イタリック
     while(fulltext.indexOf("\/\/")>=0){
     fulltext = fulltext.replace( "\/\/" , "<em>" ) ;
     fulltext = fulltext.replace( "\/\/" , "</em>" ) ;
     }

     //テレタイプ
     while(fulltext.indexOf("\{\{")>=0){
     fulltext = fulltext.replace( "\{\{" , "<tt>" ) ;
     fulltext = fulltext.replace( "\}\}" , "</tt>" ) ;
     }

     //アンダーライン
     while(fulltext.indexOf("\_\_")>=0){
     fulltext = fulltext.replace( "\_\_" , "<span style='text-decoration: underline;'>" ) ;
     fulltext = fulltext.replace( "\_\_" , "</span>" ) ;
     }

     //上付き
     while(fulltext.indexOf("\^\^")>=0){
     fulltext = fulltext.replace( "\^\^" , "<sup>" ) ;
     fulltext = fulltext.replace( "\^\^" , "</sup>" ) ;
     }

     //下付き
     while(fulltext.indexOf("\,\,")>=0){
     fulltext = fulltext.replace( "\,\," , "<sub>" ) ;
     fulltext = fulltext.replace( "\,\," , "</sub>" ) ;
     }

     //文字サイズ
     while(fulltext.indexOf("[[size")>=0){
     fulltext = fulltext.replace( "[[size " , "<span style='font-size:" ) ;
     fulltext = fulltext.replace( "]]" , "'>" ) ;
     fulltext = fulltext.replace( "[[/size]]" , "</span>" ) ;
     }

     //span要素
     while(fulltext.indexOf("[[span")>=0){
     fulltext = fulltext.replace( "[[span" , "<span" ) ;
     fulltext = fulltext.replace( "]]" , ">" ) ;
     fulltext = fulltext.replace( "[[/span]]" , "</span>" ) ;
     }
     while(fulltext.indexOf("[[/span]]")>=0){
     fulltext = fulltext.replace( "[[/span]]" , "" ) ;
     }

     //[]部分の切り取り
     textA = fulltext;
     textL = "";
     while(textA.indexOf("]") >= 0){
     textB = textA.substring(0, textA.indexOf("]") + 1);
     textA = textA.substring(textA.indexOf("]") + 1, textA.length);
     if(textB.indexOf("[") >= 0){
     textL += textB;
     }
     }
     textA = textL + textA;
     if(textA == ""){
     if(fulltext.indexOf("|") >= 0){
     fulltext = fulltext.substring(fulltext.indexOf("|") + 1, fulltext.indexOf("]"));
     }else{
     fulltext = fulltext.substring(fulltext.indexOf(" ") + 1, fulltext.indexOf("]"));
     }
     }else{
     fulltext = textA;
     }
    }else{
     fulltext = " - [ERROR|タイトルを取得できませんでした]";
    }
    return fulltext;
}
</script>
<!-- この部分にタイトル参照するページのURLを追加します。なるべく一つのdivブロック当たりのページ数が少なくなるように配置し、新たなブロックが必要になる場合は、表示用html内のタグ選択セクションを適宜編集してください。 -->
<div id="jp">
[[include :scp-jp:scp-series-jp]]
[[include :scp-jp:scp-series-jp-2]]
[[include :scp-jp:scp-series-jp-3]]
</div>
<div id="en">
[[include :scp-jp:scp-series]]
[[include :scp-jp:scp-series-2]]
[[include :scp-jp:scp-series-3]]
[[include :scp-jp:scp-series-4]]
[[include :scp-jp:scp-series-5]]
[[include :scp-jp:scp-series-6]]
</div>
<div id="ru">
[[include :scp-jp:scp-list-ru]]
[[include :scp-jp:archived-scps-ru]]
</div>
<div id="ko">
[[include :scp-jp:scp-series-ko]]
</div>
<div id="cn">
[[include :scp-jp:scp-series-cn]]
[[include :scp-jp:scp-series-cn-2]]
[[include :scp-jp:scp-series-cn-3]]
</div>
<div id="fr">
[[include :scp-jp:liste-fr]]
</div>
<div id="es">
[[include :scp-jp:serie-scp-es]]
</div>
<div id="th">
[[include :scp-jp:scp-series-th]]
</div>
<div id="de">
[[include :scp-jp:scp-serie-de]]
</div>
<div id="it">
[[include :scp-jp:scp-it-serie-i]]
</div>
<div id="pl">
[[include :scp-jp:lista-pl]]
</div>
<div id="ua">

</div>
<div id="pt">
[[include :scp-jp:series-1-pt]]
</div>
<div id="decommissioned">
[[include :scp-jp:decommissioned-scps-arc]]
[[include :scp-jp:decommissioned-scps-ko-arc]]
</div>
<div id="001">
[[include :scp-jp:scp-001]]
[[include :scp-jp:scp-001-jp]]
[[include :scp-jp:scp-cn-001]]
[[include :scp-jp:scp-001-ko]]
[[include :scp-jp:scp-001-fr]]
</div>
<div id="Joke">
[[include :scp-jp:joke-scps]]
[[include :scp-jp:joke-scps-jp]]
[[include :scp-jp:joke-scps-ru]]
[[include :scp-jp:joke-scps-ko]]
[[include :scp-jp:joke-scps-cn]]
[[include :scp-jp:joke-scps-fr]]
[[include :scp-jp:joke-scps-pl]]
[[include :scp-jp:joke-scps-es]]
[[include :scp-jp:joke-scps-th]]
[[include :scp-jp:joke-scps-de]]
[[include :scp-jp:joke-scps-pt]]
</div>
<div id="EX">
[[include :scp-jp:scp-ex]]
[[include :scp-jp:scp-jp-ex]]
[[include :scp-jp:scp-ko-ex]]
[[include :scp-jp:scp-th-ex]]
</div>
<div id="arc">
[[include :scp-jp:archived-scps]]
[[include :scp-jp:deleted-scp-ru]]
[[include :scp-jp:archived-scps-ru]]
[[include :scp-jp:archived-scps-jp]]
</div>
[[/html]]
[[/div]]
[[%%content{0}%%html]]
<style>
@import url(http://d3g0gp89917ko0.cloudfront.net/v--de24f08b1628/common--theme/base/css/style.css);
@import url(http://d3g0gp89917ko0.cloudfront.net/v--de24f08b1628/common--theme/shiny/css/style.css);
@import url(http://scp-jp.wdfiles.com/local--theme/scp-sigma-9-off-canvas/style.css);
@import url(http://scp-jp.wdfiles.com/local--files/japanese-syntax/scp-WikidotCss.css);
img.image {
width: 16px !important;
height: 11px !important;
float: right !important;
}
</style>
<script type="text/javascript" src="http://scp-jp.wdfiles.com/local--files/japanese-syntax/scpHTMLblockCtrl_ver1_ex.js"></script>
<script type="text/javascript" src="http://scp-jp.wdfiles.com/local--code/tag-search/2"></script>
<script type="text/javascript">
isHTMLblockHide = true;
var mainlist = [];
var listCheck = [];
var timestamp = new Date();
var frameCheck, ix, listMax, listCount, loadFinish, flagOC, mframeNo, pageNo, totalPages;
var timerID;

document.addEventListener("DOMContentLoaded",function(){
    var form = document.forms.mainForm;
    var nowURL = document.referrer;
    if(nowURL.search("list1_limit") >= 0){
     listCheck[0] = true;
     flagOC = 0;
    }else{
     listCheck[0] = false;
     flagOC = 1;
    }
    if(nowURL.search("list2_limit") >= 0){
     listCheck[1] = false;
    }else{
     listCheck[1] = true;
    }
    if(nowURL.search("list3_limit") >= 0){
     listCheck[2] = false;
    }else{
     listCheck[2] = true;
    }
    if(nowURL.search("list4_offset") >= 0){
     listCheck[3] = true;
    }else{
     listCheck[3] = false;
    }
    if(nowURL.search("list5_offset") >= 0){
     listCheck[4] = true;
    }else{
     listCheck[4] = false;
    }
    if(nowURL.search("list6_offset") >= 0){
     listCheck[5] = true;
    }else{
     listCheck[5] = false;
    }
    if(nowURL.search("list7_offset") >= 0){
     listCheck[6] = true;
    }else{
     listCheck[6] = false;
    }
    if(nowURL.search("list8_limit") >= 0){
     listCheck[7] = false;
    }else{
     listCheck[7] = true;
    }
    if(nowURL.search("list9_limit") >= 0){
     listCheck[8] = false;
    }else{
     listCheck[8] = true;
    }
    if(nowURL.search("list10_offset") >= 0){
     listCheck[9] = true;
    }else{
     listCheck[9] = false;
    }
    if(nowURL.search("list11_offset") >= 0){
     listCheck[10] = true;
    }else{
     listCheck[10] = false;
    }
    if(nowURL.search("list12_offset") >= 0){
     listCheck[11] = true;
    }else{
     listCheck[11] = false;
    }
    listCheck[12] = true;
    if(nowURL.search("list14_limit") >= 0){
     listCheck[13] = true;
    }else{
     listCheck[13] = false;
    }
    if(nowURL.search("list15_offset") >= 0){
     listCheck[14] = true;
    }else{
     listCheck[14] = false;
    }
    form.list1.checked = listCheck[0];
    form.list2.checked = listCheck[1];
    form.list3.checked = listCheck[2];
    form.list4.checked = listCheck[3];
    form.list5.checked = listCheck[4];
    form.list6.checked = listCheck[5];
    form.list7.checked = listCheck[6];
    form.list8.checked = listCheck[7];
    form.list9.checked = listCheck[8];
    form.list10.checked = listCheck[9];
    form.list11.checked = listCheck[10];
    form.list12.checked = listCheck[11];
    form.list13.checked = listCheck[12];
    form.list14.checked = listCheck[13];
    form.list15.checked = listCheck[14];
    if(nowURL.indexOf("/p/") >= 0){
     pageNo = nowURL.substring(nowURL.indexOf("/p/") + 3, nowURL.length);
     //pageNo = pageNo.replace( "/p/ " , "" );
    }else if(nowURL.indexOf("/metatitle_p/") >= 0){
     pageNo = nowURL.substring(nowURL.indexOf("/metatitle_p/") + 13, nowURL.length);
     //pageNo = pageNo.replace( "/metatitle_p/ " , "" );
    }else{
     pageNo = 1;
    }
    pageNo = parseFloat(pageNo);
    frameCheck = -1;
    listMax = 250;
    listCount = 0;
    loadFinish = 0;
    mframeNo = -1;
    clock();
});

function clock() {
    if(frameCheck == -1){
     searchLoad();
     setTimeout(clock,50);
    }
    if(frameCheck >= 0 && loadFinish == 0){
     loadFinish = window.parent.window.frames[frameCheck].checkLoad();
     if(loadFinish > 0){
     for(var i in SearchSettingParam.BranchData){
     if(i == "undefinedDefault"){
     continue;
     }
     window.parent.window.frames[frameCheck].alltext[0].push(i);
     window.parent.window.frames[frameCheck].alltext[1].push(window.parent.window.frames[frameCheck].convURL(i));
     }
     writeList();
     }
     setTimeout(clock,50);
    }
}
function searchLoad(){
    for(ix=0; ix <= window.parent.window.frames.length; ix++){
     try{
     if(typeof(window.parent.window.frames[ix].startSearch0) == "function"){
     frameCheck = ix;
     break;
     }
     }catch(e){
     }
    }
}

function resList(num, frame){
    listMax = num;
    mframeNo = frame;
    writeList();
}

function setList(){
    var form = document.forms.mainForm;
    listCheck[0] = form.list1.checked;
    listCheck[1] = form.list2.checked;
    listCheck[2] = form.list3.checked;
    listCheck[3] = form.list4.checked;
    listCheck[4] = form.list5.checked;
    listCheck[5] = form.list6.checked;
    listCheck[6] = form.list7.checked;
    listCheck[7] = form.list8.checked;
    listCheck[8] = form.list9.checked;
    listCheck[9] = form.list10.checked;
    listCheck[10] = form.list11.checked;
    listCheck[11] = form.list12.checked;
    listCheck[12] = form.list13.checked;
    listCheck[13] = form.list14.checked;
    listCheck[14] = form.list15.checked;
    writeList();
    if(mframeNo >=0){
     window.parent.window.frames[mframeNo].resList2(listCheck);
    }
}

function writeList(){
    var fulltitle, i, j;
    var countRow = 1;
    if(listCheck[14] == true){
     mainlist[0] = ["タイトル - メタタイトル", "ページ作成者", "作成日時", "最終更新者", "最終更新日時", "最終コメント者", "最終コメント日時", "ｺﾒﾝﾄ", "評価(UV/DV)", "文字数", "子ﾍﾟｰｼﾞ数", "ﾘﾋﾞｼﾞｮﾝ数"];
    }else{
     mainlist[0] = ["タイトル - メタタイトル", "ページ作成者", "作成日時", "最終更新者", "最終更新日時", "最終コメント者", "最終コメント日時", "ｺﾒﾝﾄ", "評価", "文字数", "子ﾍﾟｰｼﾞ数", "ﾘﾋﾞｼﾞｮﾝ数"];
    }
    if(listCheck[12] == true){
     var chara = "<tr><th>" + mainlist[0][0] + "</th>";
    }else{
     var chara = "<tr><th>ページタイトル</th>";
    }
    for(j = 1; j < 12; j++){
     if(listCheck[j] == true){
     countRow++;
     chara += "<th>" + mainlist[0][j] + "</th>";
     }
    }
    if(listCheck[0] == true && flagOC == 1){
     document.getElementById("listOC").style.display="inline-block";
    }else{
     document.getElementById("listOC").style.display="none";
    }
    chara += "</tr>";
    for(i = 1; i < mainlist.length; i++){
     if(mainlist[i] != null){
     fulltitle = i + ". ";
     if(listCheck[0] == true){
     fulltitle += mainlist[i][0];
     }
     fulltitle += mainlist[i][13];
     if(listCheck[12] == true){
     var metatitle = selectTitle(mainlist[i][15], mainlist[i][12]);
     if(metatitle != mainlist[i][16]){
     fulltitle +=metatitle
     }
     }
     fulltitle += mainlist[i][14];
     chara += "<tr><td>" + fulltitle + "</td>";
     for(j = 1; j < 12; j++){
     if(listCheck[j] == true){
     if(j == 8){
     chara += "<td>" + votesText(mainlist[i][j]) + "</td>";
     }else{
     chara += "<td>" + mainlist[i][j] + "</td>";
     }
     }
     }
     chara += "</tr>";
     if(listCheck[13] == true){
     chara += tagList(mainlist[i][15], countRow);
     }
     }
    }
    document.getElementById("SCPlist").innerHTML = chara;
    writePager();
    correctIframeSize();
}

function resData(contents){
    var tags = contents[1];
    totalPages = contents[16];
    listCount += 1;
    var jp = SearchSettingParam.BranchData.jp.url;
    mainlist[ contents[0] ] = [selectOC(tags), userName(contents[5]), convDates(contents[6]), userName(contents[7]), convDates(contents[8]), userName(contents[9]), convDates(contents[10]), contents[11], contents[12], contents[13], contents[14], contents[15], contents[3], "<a href='" + jp + contents[4] + "' target='Page1'>" + contents[2] + "</a> ", selectBranch(tags, contents[4]), tags,contents[2]];
    writeList();
}

function selectTitle(tags, scpNo){
SearchSettingParam.getBranchByTag(tags);
    var metatitle =  "";
    if(SearchSettingParam.RecentlyTagData.Branch != "undefinedDefault"){
     switch(SearchSettingParam.RecentlyTagData.LocalTag){
     case "scp":
     if(tags.search("アーカイブ済み") >= 0){
     metatitle = startSearch1(scpNo,"arc");
     }else if(tags.search("001提言") >= 0){
     metatitle = startSearch1(scpNo,"001") + " (001の提言)";
     }else if(tags.search("decommissioned") >= 0){
     metatitle = startSearch1(scpNo,"decommissioned");
     }else if(tags.search("ジョーク") >= 0){
     metatitle = startSearch1(scpNo,"ジョーク");
     }else if(tags.search("explained") >= 0){
     metatitle = startSearch1(scpNo,"EX");
     }else{
     metatitle = startSearch1(scpNo,SearchSettingParam.RecentlyTagData.Branch);
     }
     break;
     default:
     metatitle = SearchSettingParam.RecentlyTagData.ActualTag.toUpperCase();
     break;
     }
    
    
    }else{
     if(tags.search("ハブ") >= 0){
     metatitle = " (ハブページ)";
     }else if(tags.search("エッセイ") >= 0){
     metatitle = " (エッセイ)";
     }else if(tags.search("ガイド") >= 0){
     metatitle = " (ガイドページ)";
     }else if(tags.search("goi-format") >= 0){
     metatitle = " (GOIフォーマット)";
     }else if(tags.search("補足") >= 0){
     metatitle = " (補足文章)";
     }else if(tags.search("見出し") >= 0){
     metatitle = " (見出しページ)";
     }
    }


    return metatitle;
}
function startSearch1(scpNo, cat) {
    if(frameCheck >= 0 && loadFinish > 0){
     var s = window.parent.window.frames[frameCheck].startSearch0(scpNo, cat);
    }else{
     var s = " - <a href='javascript:void(0);' onclick='writeList()'>読み込みが遅い場合はここをクリックしてください</a>";
    }
    return s;
}

function selectOC(tags){
    var objectClass = "";
    if(tags.search("neutralized") >= 0){
     objectClass += "<span style='color:#9900FF'>●</span>";
    }
    if(tags.search("apollyon") >= 0){
     objectClass += "<span style='color:#FF5E00'>●</span>";
    }
    if(tags.search("archon") >= 0){
     objectClass += "<span style='color:#0022FF'>●</span>";
    }
    if(tags.search("thaumiel") >= 0){
     objectClass += "<span style='color:#000000'>●</span>";
    }
    if(tags.search("keter") >= 0){
     objectClass += "<span style='color:#FF0000'>●</span>";
    }
    if(tags.search("euclid") >= 0){
     objectClass += "<span style='color:#FFDD00'>●</span>";
    }
    if(tags.search("safe") >= 0){
     objectClass += "<span style='color:#00FF00'>●</span>";
    }
    if(tags.search("esoteric-class") >= 0){
     objectClass += "<span style='color:#777777'>●</span>";
    }
    if(tags.search("explained") >= 0){
     objectClass += "<span style='color:#77FFFF'>●</span>";
    }
    objectClass += " ";
    return objectClass;
}

function selectBranch(tags,page){
    var branchSymbol = SearchSettingParam.getBranchByTag(tags);
    var branch = "";
    if(SearchSettingParam.BranchData[branchSymbol].createSource){
     var branchData = SearchSettingParam.BranchData[branchSymbol];
     branch = "<a href='" + branchData.url + page + "' target='_top'><img src='"+branchData.flag+"' alt='🔗' class='image' /></a>";
    }
    
    return branch;
}

function convDates(num){
    if(num == ""){
     var s = "<center>-</center>";
    }else{
     num = num.replace( "%%date\|" , "" ) ;
     num = num.replace( "%%" , "" ) ;
     num = new Date(num * 1000);
     var s = "<span display='inline-block'>" + num.getFullYear() + "/" + (num.getMonth() + 1) + "/" + num.getDate() + "</span> <span display='inline-block'>" + set2fig( num.getHours() ) + ":" + set2fig( num.getMinutes() ) + "</span>";
    }
    return s;
}
function set2fig(num) {
    var ret;
    if( num < 10 ) { ret = "0" + num; }
    else { ret = num; }
    return ret;
}

function userName(name){
    if(name[0] == ""){
     var s = "<center>-</center>";
    }else{
     var s = "<span class='printuser avatarhover'><a href='http://www.wikidot.com/user:info/" +
name[0] +
"' onclick='WIKIDOT.page.listeners.userInfo(" +
name[1] +
")\; return false\;' target='page3'><img class='small' src='http://www.wikidot.com/avatar.php\?userid=" +
name[1] +
"\&amp\;amp\;size=small\&amp\;amp\;timestamp=" +
timestamp.getTime() +
"' alt='" +
name[0] +
"' style='background-image:url(http://www.wikidot.com/userkarma.php\?u=" +
name[1] +
")' /></a><a href='http://www.wikidot.com/user:info/" +
name[0] +
"' onclick='WIKIDOT.page.listeners.userInfo(" +
name[1] +
")\; return false\;' target='page3'>" +
name[0] +
"</a></span>";
    }
    return s;
}

function tagList(tag, row){
    var tags = tag.split(" ");
    var s ="<tr><td colspan='" + row + "'><strong>タグ一覧:</strong> ";
    for(var i = 0; i < tags.length; i++){
     s += "<a href='javascript:void(0)\;' onclick='tagSearch(\"" + tags[i] + "\")'>" + tags[i] + "</a> ";
    }
    s += "</td></tr>"
    return s;
}

function votesText(votes){
    if(listCheck[14] == true){
     var s = votes[0] + " (+" + ( ( votes[1] - votes[0] ) / 2 +  votes[0] ) + "/-" + ( votes[1] - votes[0] ) / 2 + ")";
    }else{
     var s = votes[0];
    }
    return s;
}

function writePager(){
    var pageCount = (totalPages - 1 - ( (totalPages - 1) % listMax)) / listMax + 1;
    if(pageCount == 1){
     var chara = "";
     document.getElementById("pagerArea").style.display="none";
    }else{
     document.getElementById("pagerArea").style.display="block";
     var chara = "<span class='pager-no'>ページ " + pageNo + "/" + pageCount + "</span>";
     if(pageNo > 10){
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo - 10) + ")'>&laquo\; &laquo\; </a></span>";
     }
     if(pageNo > 1){
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo - 1) + ")'>&laquo\; 前 </a></span>";
     if(pageNo < 7){
     for(var i = 1; i < pageNo; i++){
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + i + ")'>" + i + "</a></span>";
     }
     }else{
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(1)'>1</a></span>";
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(2)'>2</a></span>";
     chara += "<span class='dots'>...</span>";
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo - 2) + ")'>" + (pageNo - 2) + "</a></span>";
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo - 1) + ")'>" + (pageNo - 1) + "</a></span>";
     }
     }
     chara += "<span class='current'>" + pageNo + "</span>";
     if(pageNo <= pageCount - 1){
     if(pageNo > pageCount -  6){
     for(i = pageNo + 1; i <= pageCount; i++){
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + i + ")'>" + i + "</a></span>";
     }
     }else{
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo + 1) + ")'>" + (pageNo + 1) + "</a></span>";
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo + 2) + ")'>" + (pageNo + 2) + "</a></span>";
     chara += "<span class='dots'>...</span>";
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageCount - 1) + ")'>" + (pageCount - 1) + "</a></span>";
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + pageCount + ")'>" + pageCount + "</a></span>";
     }
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo + 1) + ")'> 次 &raquo\;</a></span>";
     }
     if(pageNo <= pageCount - 10){
     chara += "<span class='target'><a href='javascript:void(0)\;' onclick='pageChange(" + (pageNo + 10) + ")'>&raquo\; &raquo\; </a></span>";
     }
    }
    document.getElementById("pagerArea").innerHTML = chara;
    document.getElementById("pagerArea2").innerHTML = chara;
}

function tagSearch(tag){
    if(mframeNo >= 0){
     window.parent.window.frames[mframeNo].startSearch(0, tag, 1);
    }
}

function pageChange(No){
    if(mframeNo >= 0){
     window.parent.window.frames[mframeNo].startSearch(0, "", No);
    }
}

</script>
<center><div id="listOC"><span style="color: #00ff00">●</span>:safe <span style="color: #ffdd00">●</span>:euclid <span style="color: #ff0000">●</span>:keter <span style="color: #000000">●</span>:thaumiel <span style="color: #777777">●</span>:esoteric-class <span style="color: #77ffff">●</span>:explained <span style="color: #9900ff">●</span>:neutralized <span style="color: #FF00BF">●</span>:apollyon <span style="color: #0022FF">●</span>:archon</div></center>
<div id="pagerArea" class="pager"></div>
<table class="wiki-content-table" id="SCPlist">
<tr>
<th>ページタイトル（原文リンク）</th>
<th>ページ作成者</th>
<th>作成日時</th>
<th>最終更新者</th>
<th>最終日時</th>
<th>最終コメント者</th>
<th>最終コメント日時</th>
<th>ｺﾒﾝﾄ</th>
<th>評価(UV/DV)</th>
<th>文字数</th>
<th>子ﾍﾟｰｼﾞ数</th>
<th>ﾘﾋﾞｼﾞｮﾝ数</th>
</tr>
</table>
<div id="pagerArea2" class="pager"></div>
<table style="margin-right:auto; margin-left:auto; width: 95%; border: 1px solid silver;">
<tr>
<td style="text-align: left; border: 0px">
<center><h2>表示項目</h2></center>
<form name='mainForm'>
<p><strong>デフォルト表示:</strong> ページ作成者<input type="checkbox" name="list2" onChange="setList()">/
作成日時<input type="checkbox" name="list3" onChange="setList()">/
コメント数<input type="checkbox" name="list8" onChange="setList()">/
評価<input type="checkbox" name="list9" onChange="setList()"></p>
<p><strong>更新・コメント:</strong> 最終更新者<input type="checkbox" name="list4" onChange="setList()">/
最終日時<input type="checkbox" name="list5" onChange="setList()">/
最終コメント者<input type="checkbox" name="list6" onChange="setList()">/
最終コメント日時<input type="checkbox" name="list7" onChange="setList()"></p>
<p><strong>パラメータ:</strong> 文字数<input type="checkbox" name="list10" onChange="setList()">/
子ページ数<input type="checkbox" name="list11" onChange="setList()">/
リビジョン数<input type="checkbox" name="list12" onChange="setList()">/
評価内訳<input type="checkbox" name="list15" onChange="setList()"></p>
<p><strong>その他:</strong> オブジェクトクラス<input type="checkbox" name="list1" onChange="setList()">/

メタタイトル<input type="checkbox" name="list13" onChange="setList()">/
タグ一覧<input type="checkbox" name="list14" onChange="setList()"></p>
</form>
</td>
</tr>
</table>
<div id="scpHTMLblockResizeSwitch"></div>
[[/html]]
[[/module]]
[!--
メタタイトル表示用のリストを生成するモジュールです。
--]
[[div class="datahtml"]]
[[module ListPages category="@URL|*" tags="@URL" created_at="@URL" updated_at="@URL" created_by="@URL" rating="@URL" votes="@URL" link_to="@URL" offset="@URL|0" name="@URL" limit="@URL|0" perPage="@URL|20" parent="@URL" order="@URL|created_at desc" urlAttrPrefix="metatitle"]]
[[%%content{0}%%html]]
<script type="text/javascript">
var check, i;
var timerID;

//表示用htmlと同期を取ります。
document.addEventListener("DOMContentLoaded", function(event) {
check = -1;
clock();
  });
function clock() {
if(check == -1){
searchLoad();
setTimeout(clock,100);
}
}
function searchLoad(){
for(i=0; i <= window.parent.window.frames.length; i++){
try{
if(typeof(window.parent.window.frames[i].resData) == "function"){
check = i;
break;
}
}catch(e){

}
}
if(check >= 0){
sendData();
}
}

//各ページのデータを表示用htmlに送ります
function sendData(){
var contents = [%%index%%, "%%tags%%", document.getElementById("getTitle").innerHTML, "%%name%%", "%%fullname%%",
["%%created_by%%",%%created_by_id%% ], "%%created_at%%",
["%%updated_by%%",%%updated_by_id%% ], "%%updated_at%%",
["%%commented_by%%","%%commented_by_id%%" ], "%%commented_at%%",
%%comments%%, [%%rating%%, %%rating_votes%% ], %%size%%, %%children%%, %%revisions%%, %%total_or_limit%%];
window.parent.frames[check].resData(contents);
}
</script>
<div id="getTitle" style="display:none">%%title%%</div>
[[/html]]
[[/module]]
[[/div]]
[[div class="content-panel standalone multiple-tag-search-UI" style="width: 95%; margin: 0 auto 20px; padding: 10px 20px;"]]
[[html]]
<style>
@import url(http://d3g0gp89917ko0.cloudfront.net/v--de24f08b1628/common--theme/base/css/style.css);
@import url(http://d3g0gp89917ko0.cloudfront.net/v--de24f08b1628/common--theme/shiny/css/style.css);
@import url(http://scp-jp.wdfiles.com/local--theme/scp-sigma-9-off-canvas/style.css);
#tagField a {
   display: inline-block;
}
input[type="button"]{
cursor:pointer;

}
</style>
<script type="text/javascript" src="http://scp-jp.wdfiles.com/local--code/tag-search/1"></script>
<script type="text/javascript" src="http://scp-jp.wdfiles.com/local--code/scpmetatitlesearch/4"></script>
<script type="text/javascript">
 
//下記変数に複数検索タグ用のURLを記入してください
var baseURL = "http://scp-jp.wikidot.com/tag-search";
 
//ユーザのブラウザを取得
var Browser = getBrowser();
    
//外国語に翻訳しやすく為の基本設定
//<追加するパラメータ名>:<フォームに表示する名称>の形式で入力してください
 
//オーダー用
var orderSetteing = {
    "created_at desc":"作成日時が新しい順",
    "created_at":"作成日時が古い順",
    "rating desc":"評価の高い順",
    "rating":"評価の低い順",
    "updated_at desc":"更新日時が新しい順",
    "updated_at":"更新日時が古い順",
    "size desc":"文字数の多い順",
    "size":"文字数の少ない順",
    "votes desc":"得票数の多い順",
    "votes":"得票数の少ない順",
    "comments desc":"コメントの多い順",
    "comments":"コメントの少ない順",
    "revisions desc":"更新回数の多い順",
    "revisions":"更新回数の少ない順",
    "name desc":"ページ名降順",
    "name":"ページ名昇順",
    "random":"ランダム表示"
}
 
//レート用
var rateSetting = {
    "=":"と同じ",
    ">=":"以上",
    "<=":"以下",
    "<>":"以外",
    ">":"より大きい",
    "<":"未満"
}
 
var NotationYear = "年";
 
//月の表示
var NotationMonth={
    'year_round':'通年',
    'm01':"1月",
    'm02':"2月",
    'm03':"3月",
    'm04':"4月",
    'm05':"5月",
    'm06':"6月",
    'm07':"7月",
    'm08':"8月",
    'm09':"9月",
    'm10':"10月",
    'm11':"11月",
    'm12':"12月"
}
 
var NotationTimeSpan1 = {
    '=':"の間",
    '>=':"以降",
    '<=':"以前",
    '>':"より後",
    '<':"より前"
}
 
var NotationTimeSpan2 = {
    '%20hours':"時間",
    '%20day':"日",
    '%20week':"週間",
    '%20month':"ヶ月"
}
 
/*ここから実際の動作*/
var tagTable = new Array();
var tagNumber, frameCheck;
var form;
var listMax;
 
//起動時にタグ数の初期値と日付フォームのデフォルトを書き出します。
document.addEventListener("DOMContentLoaded",function(){
    form = document.forms.mainForm;
    /*上記の設定に合わせた検索フォームの自動生成*/
    createFirstTagSelecter();
    createSearchSelecter("order",orderSetteing);//orderSelecter
    createSearchSelecter("rating1",rateSetting);//rateSelecter
    createSearchSelecter("votes1",rateSetting);//rateSelecter
    tagNumber = 0;
    createTimeForm(1);
    createTimeForm(2);
    //直近の検索条件の復元
    var check = document.referrer.split(baseURL).join("");
    if(check.length > 1)restoreSearchForm(check);
    if(form.page.value != null){
     listMax = form.page.value;
    }else{
     listMax = 20;
    }
    frameCheck = -1;
    searchClock();
});

function searchClock() {
    if(frameCheck == -1){
     searchLoad();
     setTimeout(searchClock,100);
    }
}

function searchLoad(){
    for(i=0; i <= window.parent.window.frames.length; i++){
     try{
     if(typeof(window.parent.window.frames[i].resList) == "function"){
     frameCheck = i;
     break;
     }
     }catch(e){
     }
    }
    sendList();
}

function createFirstTagSelecter(){
//第1カテゴリの連想配列からプルダウンメニューを生成します
    var option;
    for(var i in FirstCategory){
        option = document.createElement("option");
        option.value = i;
        option.innerHTML = i;
        form.tag1.appendChild(option);
    }
}
 
function createSearchSelecter(targetName,setting){
    for(var i in setting){
        option = document.createElement("option");
        option.value = i;
        option.innerHTML = setting[i];
        form.elements[targetName].appendChild(option);
    }
}
 
/*検索用のURLの生成*/
 
//フォームの値を変換・結合してURLの書き出しを行います。
function startSearch(flag, tag, pageNo){
    var passingURL = baseURL;
    var oldURL = passingURL;
    //現在時刻に応じた数値の生成(これがないとメタタイトル検索結果が暫くの間wikidot側で固定される)
    var limitNum = new Date;
    limitNum = Math.abs( limitNum.getTime() ) + 10000;
    //注意addOrder()が最後でないと、検索フォームの状態復元時にバグが発生します
    if(tag == ""){
     passingURL = passingURL + addTag() + addCtime() + addUtime() + addCategory() + addAuthor() + addRate() + addVotes() + addOffset() + "/" + addTitle() + "limit/" + limitNum + addPpage() + addParent() + addList() + addOrder() + addPageno(pageNo);
    }else{
     passingURL = passingURL + "/" + addTitle() + "tag/" + tag + addCtime() + addUtime() + addCategory() + addAuthor() + addRate() + addVotes() + addOffset() + "/" + addTitle() + "limit/" + limitNum + addPpage() + addParent() + addList() + addOrder() + addPageno(pageNo);
    }
    if(flag == 0){
     parent.location.href = passingURL;
    }else{
     window.open(passingURL, "_blank");
    }
}
 
//URL用に検索オプションを含めたタグを結合します。
function addTag(){
    var i;
    if((form.check1.checked == true) && (tagNumber > 0)){
        var a = "/" + addTitle() + "tag/";
        for(i = 0; i < tagNumber; i++){
        if(i > 0){a = a + ",";}
        if(tagTable[i][0] == 1){
        a = a + "%2b";
        }else if(tagTable[i][0] == 2){
        a = a + "-";
        }
        a = a + tagTable[i][1];
        }
    }else{
        var a = "";
    }
    return a;
}
 
//URL用に作成日時フォームの値を結合し書き出します。
function addCtime(){
    var a = "";
    if(form.check2.checked){
        a = constructTimeParameter(1);
    }
    return a;
}
//URL用に更新日時フォームの値を結合し書き出します。
function addUtime(){
    var a = "";
    if(form.check3.checked){
        a = constructTimeParameter(2);
    }
    return a;
}
 
 
function constructTimeParameter(type){
    if(type < 2){
        var a = "/" + addTitle() + "created_at/";
    }else{
        var a = "/" + addTitle() + "updated_at/";
    }
    var initialCode = (type < 2)?"C":"U";
    var runtype = Number(getRadioValue(initialCode + "type"));
    switch(runtype){
        case 0:
            //作成日時
            a += form.elements["option" + type].value + form.elements["years" + type].value;
            if(form.elements["month" + type].value != "year_round")a += "."+form.elements["month" + type].value;
        break;
        case 1:
            //日付検索
            var dayNow = new Date();
            var target = (type < 2)?"created":"updated";
            var dayOld = decDay(form.elements[target].value);
            var diff = Math.ceil( (dayNow.getTime() - dayOld.getTime()) / (1000 * 60 * 60) );
            a += ("last%20"+ diff + "%20hours");
            if(diff < 1)a = "";
        break;
        case 2:
            //期間を指定
            a += form.elements[initialCode + "daterange"].value + (form.elements[initialCode + "num1"].value + form.elements[initialCode + "num2"].value);
        break;
    }
    return a;
}

//URL用にカテゴリを書き出します。
function addCategory(){
    if(form.check12.checked == true){
        var a = "/" + addTitle() + "category/" + form.category.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用に作成者を書き出します。
function addAuthor(){
    if(form.check4.checked == true){
        var a = "/" + addTitle() + "created_by/" + form.author.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用に評価値を書き出します。
function addRate(){
    if((form.check5.checked == true) && (form.rating2.value != "")){
        var a = "/" + addTitle() + "rating/" + form.rating1.value + form.rating2.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用に得票値を書き出します。
function addVotes(){
    if((form.check11.checked == true) && (form.votes2.value != "")){
        var a = "/" + addTitle() + "votes/" + form.votes1.value + form.votes2.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用にオフセット値を書き出します。
function addOffset(){
    var form = document.forms.mainForm;
    if((form.check6.checked == true) && (form.offset.value != "")){
        var a = "/" + addTitle() + "offset/" + form.offset.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用に名前検索の文字を書き出します（未使用）。
function addName(){
    var form = document.forms.mainForm;
    if((form.check7.checked == true) && (form.chara.value != "")){
        var a = "/" + addTitle() + "name/" + form.chara.value + "%";
    }else{
        var a = "";
    }
    return a;
}
//URL用にページ内表示数を書き出します。
function addPpage(){
    var form = document.forms.mainForm;
    if((form.check8.checked == true) && (form.page.value != "")){
        var a = "/" + addTitle() + "perPage/" + form.page.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用に並べ替え方法を書き出します。
function addOrder(){
    var form = document.forms.mainForm;
    if((form.check9.checked == true) && (form.order.value != "")){
        var a = "/" + addTitle() + "order/" + form.order.value;
    }else{
        var a = "";
    }
    return a;
}
//URL用に親ページのみか否かを書き出します。
function addParent(){
    var form = document.forms.mainForm;
    if(form.check10.checked == true){
        var a = "/" + addTitle() + "parent/-";
    }else{
        var a = "";
    }
    return a;
}

function addPageno(No){
    if(No < 2){
     var a = "";
    }else{
     var a = "/" + addTitle() + "p/" + No;
    }
    return a;
}

//リストの表示選択を書き出します。
function addList(){
    var form = document.forms.mainForm;
    var a = "";
    if(form.list1.checked == true){
        a += "/list1_limit/1";
    }
    if(form.list2.checked == false){
        a += "/list2_limit/1";
    }
    if(form.list3.checked == false){
        a += "/list3_limit/1";
    }
    if(form.list4.checked == true){
        a += "/list4_offset/1";
    }
    if(form.list5.checked == true){
        a += "/list5_offset/1";
    }
    if(form.list6.checked == true){
        a += "/list6_offset/1";
    }
    if(form.list7.checked == true){
        a += "/list7_offset/1";
    }
    if(form.list8.checked == false){
        a += "/list8_limit/1";
    }
    if(form.list9.checked == false){
        a += "/list9_limit/1";
    }
    if(form.list10.checked == true){
        a += "/list10_offset/1";
    }
    if(form.list11.checked == true){
        a += "/list11_offset/1";
    }
    if(form.list12.checked == true){
        a += "/list12_offset/1";
    }
    if(form.list14.checked == true){
        a += "/list14_limit/1";
    }
    if(form.list15.checked == true){
        a += "/list15_offset/1";
    }
    return a;
}

//メタタイトル表示用のリストに切り替えます。
function addTitle(){
    var form = document.forms.mainForm;
    if(form.list13.checked == true){
        var a = "metatitle_";
    }else{
        var a = "";
    }
    return a;
}
 
//行列に格納したタグの状態をhtml上に書き出します。
function renewTag(){
    var i;
    var s = "<p style='line-height: 1.7;'><input type='checkbox' name='check1' value='true' checked='checked'>指定タグ: ";
    for(i = 0; i < tagNumber; i++){
        s += "<a style='padding: 2px 4px; line-height: 1.2; border-radius: 6px; color: white; background-color: ";
        if(tagTable[i][0] == 0){
        s += "green";
        }else if(tagTable[i][0] == 1){
        s += "blue";
        }else if(tagTable[i][0] == 2){
        s += "red";
        }
        s += ";'><span style = 'cursor: pointer; font-size: 1.2em;' onclick = 'deletTag(" + i + ")'>×</span> <span style = 'cursor: pointer;' onclick = 'changeTag(" + i + ")'>" + tagTable[i][1] + "</span></a> ";
    }
 
    s += "</p>";
    document.getElementById("tagField").innerHTML = s;
}
 
//タグ文字列のクリックに応じて行列中の検索オプション値を変更します。
function changeTag(t){
    tagTable[t][0] = (tagTable[t][0] + 1) % 3;
    renewTag();
}
//タグ文字列のクリックに応じて行列中からタグを消去します。
function deletTag(t){
    var i;
    for(i = t; i < tagNumber; i++){
        tagTable[i] = tagTable[i+1];
    }
    if(tagNumber > 0){
        tagNumber = tagNumber - 1;
    }
    renewTag();
}
 
//タグの直接入力を行列に反映します。
function tagInput1(){
    if(form.tagInput.value != ""){
        tagTable[tagNumber] = [1, form.tagInput.value];
        tagNumber = tagNumber + 1;
        renewTag();
    }
    form.tagInput.value = "";
}


//エンターキーを押した時タグを反映する
function onkeydownTagInput(event){
    if(event.keyCode == 13){
     tagInput1();
    }

}
//カテゴリ検索の二段目以降の選択に応じてタグを行列に反映します。
function tagInput2(elm){
    if(elm.value != ""){
        tagTable[tagNumber] = [1, elm.value];
        tagNumber = tagNumber + 1;
        renewTag();
    }
}
 
//カテゴリ選択の一段目の選択に応じて、二段目のプルダウンフォームを書き出します。
function tagCat1(){
    document.getElementById("tagSel3").innerHTML = "";
    var secondSelecter = document.getElementById("tagSel2");
    secondSelecter.innerHTML = "";
    var target = form.tag1.value;
    if(target.length > 0){
        var select = document.createElement("select");
        select.setAttribute("name","tag2");
        select.setAttribute("onChange","registerSearchTagOrCreateThirdSelecter(this)");
        var option = document.createElement("option");
        var isTagSelect = true;
        option.value = "";
        option.innerHTML = "...";
        select.appendChild(option);
        for(var i in FirstCategory[target]){
            option = document.createElement("option");
            option.value = i;
            if(typeof(FirstCategory[target][i]) == "string"){
                option.innerHTML = FirstCategory[target][i];
            }else{
                option.innerHTML = i;
                if(isTagSelect)isTagSelect = false;
            }
            select.appendChild(option);
            if(isTagSelect)select.style = "background-color:#FFFFCC;";
        }
        secondSelecter.appendChild(select);
    }
}
 
//2段目のカテゴリタグの選択に応じて、タグ検索の登録もしくは三段目のプルダウンメニューの生成を行います
function registerSearchTagOrCreateThirdSelecter(elm){
    var thirdSelecter = document.getElementById("tagSel3");
    var target = form.tag1.value;
    thirdSelecter.innerHTML = "";
    if(elm.value.length > 0){
        if(typeof(FirstCategory[target][elm.value]) == "string"){
            tagInput2(elm);
        }else{
            var select = document.createElement("select");
            select.setAttribute("onChange","tagInput2(this)");
            select.setAttribute("name","tag3");
            select.setAttribute("style","background-color:#FFFFCC;");
            var option = document.createElement("option");
            option.value = "";
            option.innerHTML = "...";
            select.appendChild(option);
            for(var i in FirstCategory[target][elm.value]){
                option = document.createElement("option");
                option.value = i;
                option.innerHTML = FirstCategory[target][elm.value][i];
                select.appendChild(option);
            }
            thirdSelecter.appendChild(select);
        }
    }
 
}
 
//作成日時及び更新日時の設定方法の切り替えに応じてフォームの形を変更します。
//type=1作成日時　type=2更新日時
function createTimeForm(type){
    var initialCode = (type < 2)?"C":"U";
    var elmName = (type < 2)?"created_at":"updated_at";
    var elm = document.getElementById(elmName);
    var y, m;
    var day = new Date();
    var inputTypeA = "date";
    var inputTypeB = "number";
    var showType = 0;
    showType = Number(getRadioValue(initialCode + "type"));

    if(Browser.indexOf("ie") == 0){
     //IE対応
     inputTypeA = "text";
     inputTypeB="text";
    }
    
    switch(showType){
        case 0:
            y = convDay(day, 1);
            m = convDay(day, 2);
            elm.innerHTML = "<select name='years"+type+"'>" + makeSel(y) + "</select>";
            createTimeSelecter(elm,('month'+type),NotationMonth,true);
            createTimeSelecter(elm,('option'+type),NotationTimeSpan1);
            setPullDown("years" + type,y);
            setPullDown("month" + type,set2fig(m));
        break;
        case 1:
            var specialName = (type < 2)?"created":"updated";
            elm.innerHTML = "<input type='"+inputTypeA+"' name='"+specialName+"'  max='2037-12-31' min=2013-07-01>";
            form.elements[specialName].value = convDay(day, 0);
            form.elements[specialName].max = convDay(day, 0);
 
        break;
        case 2:
     elm.innerHTML = "<input type='"+inputTypeB+"' name='"+initialCode+"num1' value='1' min='0' />"
     createTimeSelecter(elm,initialCode+'num2',NotationTimeSpan2);
     elm.innerHTML += "<select name='" + initialCode + "daterange'><option value='last%20'>前から現在まで</option><option value='older%20than%20'>前より古い</option></select>"
        break;
     default:
    
     break;
 
    }
 
}
 
function createTimeSelecter(elm,name,List,isMonth){
    var select = document.createElement("select");
    select.setAttribute("name",name);
    var option;
    for(var i in List){
        option = document.createElement("option");
        option.value = (isMonth)?i.split("m").join(""):i;
        option.innerHTML = List[i];
        select.appendChild(option);
    }
    elm.appendChild(select);
}
 
//西暦のプルダウンフォームを書き出します。
function makeSel(year){
    var i = 0;
    var s = "";
    do{
        s += "<option value='" + (year - i) + "'>" +  (year - i) + NotationYear + "</option>";
        i++;
    }while(year - i > 2007)
    return s;
}
//日時形式の変数をdateフォーム用文字列に変換します。
function convDay(day, swich){
    var year = day.getFullYear();
    var mon = day.getMonth()+1;
    var day = day.getDate();
    if(swich == 0){
        var s = year + "-" + set2fig(mon) + "-" + set2fig(day);
    }else if(swich == 1){
        var s = year;
    }else if(swich == 2){
        var s = mon;
    }
    return s;
}
//dateフォーム用文字列を日時形式の変数に変換します。
function decDay(source){
    var num = source.split("-");
    var day = new Date(num[0], num[1] - 1, num[2], 0, 0, 0);
    return day;
}
//一桁の数字を二桁表示の文字列に変換します。
function set2fig(num) {
    var ret;
    if( num < 10 ) { ret = "0" + num; }
    else { ret = num; }
    return ret;
}
 
//タグ検索フォームの復元
function restoreSearchForm(parameter){
    restoreSelectTags(parameter);
    restoreCategory(parameter);
    restoreUserName(parameter);
    restoreRate(parameter);
    restoreVotes(parameter);
    restoreOrder(parameter);
    restorePageSetting(parameter,"perPage/","check8","page");
    restorePageSetting(parameter,"/offset/","check6","offset");
    restorePageSetting(parameter,"metatitle_offset/","check6","offset");
    restoreTimeSetting(parameter,1);
    restoreTimeSetting(parameter,2);
    restoreParentSetting(parameter);
    restoreListSetting(parameter);
}
 
function restoreSelectTags(parameter){
    var check = parameter.search("tag/");
    if(check < 0)return;
    var tagsMember = extractSpecificParameter(parameter,check,"tag/");
    //ここからURLの文字列を通常の文字にデコード
    tagsMember=decodeURIExtension(tagsMember);
    tagsMember = tagsMember.split(',');
    for(var i=0;i<tagsMember.length;i++){
        choiceTagSetting(tagsMember[i]);
    }
    function choiceTagSetting(target){
        switch(target.charAt(0)){
            case "%":
                target = target.substring(3,target.length);
     if(target != ""){
     tagTable[tagNumber] = [1, target];
     tagNumber++;
     }
            break;
            case "-":
                target = target.substring(1,target.length);
     if(target != ""){
     tagTable[tagNumber] = [2, target];
     tagNumber++;
     }
            break;
            default:
     if(target != ""){
     tagTable[tagNumber] = [0, target];
     tagNumber++;
     }
            break;
        }
        renewTag();
    }
}

function restoreCategory(parameter){
    var check = parameter.search("category/");
    if(check < 0)return;
    var categoryName = extractSpecificParameter(parameter,check,"category/");
    form.check12.checked = true;
    form.category.value = categoryName;
}

function restoreUserName(parameter){
    var check = parameter.search("created_by/");
    if(check < 0)return;
    var userName = extractSpecificParameter(parameter,check,"created_by/");
    form.check4.checked = true;
    form.author.value = userName;
}
 
function restoreOrder(parameter){
    var check = parameter.search("order/");
    if(check < 0){
        form.check9.checked = false;
        return;
    }
    var targetPara = extractSpecificParameter(parameter,check,"order/");
    form.check9.checked = true;
    setPullDown("order",decodeURIExtension(targetPara));
}
 
function restoreRate(parameter){
    var check = parameter.search("rating/");
    if(check < 0)return;
    var RateSetting = decodeURIExtension(extractSpecificParameter(parameter,check,"rating/"));
    var i = getParamePositionJustBeforeNumber(RateSetting);
    form.rating2.value = RateSetting.substring(i,RateSetting.length);
    RateSetting = RateSetting.substring(0,i);
    setPullDown("rating1",RateSetting);
    form.check5.checked = true;
 
}

function restoreVotes(parameter){
    var check = parameter.search("votes/");
    if(check < 0)return;
    var VotesSetting = decodeURIExtension(extractSpecificParameter(parameter,check,"votes/"));
    var i = getParamePositionJustBeforeNumber(VotesSetting);
    form.votes2.value = VotesSetting.substring(i,VotesSetting.length);
    VotesSetting = VotesSetting.substring(0,i);
    setPullDown("votes1",VotesSetting);
    form.check11.checked = true;
 
}

function restorePageSetting(parameter,target,checkbox,textbox){
    var check = parameter.search(target);
    if(check < 0)return;
    check += target.length;
    var searchNum = "";
    for(var i = check;i < parameter.length;i++){
        if(parameter.charAt(i).match(/[^0-9]/))break;
        searchNum += parameter.charAt(i);
    }
 
    form.elements[checkbox].checked = true;
    form.elements[textbox].value = searchNum;
}
 
function restoreParentSetting(parameter){
    if(parameter.search("parent/-") >= 0)form.check10.checked = true;
}

function restoreListSetting(parameter){
    if(parameter.search("list1_limit") >= 0)form.list1.checked = true;
    if(parameter.search("list2_limit") >= 0)form.list2.checked = false;
    if(parameter.search("list3_limit") >= 0)form.list3.checked = false;
    if(parameter.search("list4_offset") >= 0)form.list4.checked = true;
    if(parameter.search("list5_offset") >= 0)form.list5.checked = true;
    if(parameter.search("list6_offset") >= 0)form.list6.checked = true;
    if(parameter.search("list7_offset") >= 0)form.list7.checked = true;
    if(parameter.search("list8_limit") >= 0)form.list8.checked = false;
    if(parameter.search("list9_limit") >= 0)form.list9.checked = false;
    if(parameter.search("list10_offset") >= 0)form.list10.checked = true;
    if(parameter.search("list11_offset") >= 0)form.list11.checked = true;
    if(parameter.search("list12_offset") >= 0)form.list12.checked = true;
    if(parameter.search("metatitle") >= 0){
     form.list13.checked = true;
     document.getElementById("displayList").style.display="none";
    }
    if(parameter.search("list14_limit") >= 0)form.list14.checked = true;
    if(parameter.search("list15_offset") >= 0)form.list15.checked = true;
}
 
function restoreTimeSetting(parameter,type){
    var targetSentence = (type < 2)?"created_at/":"updated_at/";
    var check = parameter.search(targetSentence);
    if(check < 0)return;
    if(parameter.search(targetSentence + "p/") >= 0)return;
    if(parameter.search(targetSentence + "metatitle_p/") >= 0)return;
    var initialCode = (type < 2)?"C":"U";
    var radioSwitches = form.elements[initialCode + "type"];
    form.elements["check" + (type+1)].checked = true;
    var targetAnalyze = extractSpecificParameter(parameter,check,targetSentence);
    check = targetAnalyze.search("last%20");
    var check1 = targetAnalyze.search("older%20than%20");
    if(check >= 0){
     resotorePeriodSetting("last%20");
    }else if(check1 >= 0){
     resotorePeriodSetting("older%20than%20");
    }else{
    restoreYearAndMonthSetting(targetAnalyze);
    }
 
    function restoreYearAndMonthSetting(){
        targetAnalyze = decodeURIExtension(targetAnalyze);
        radioSwitches[0].checked = true;
        createTimeForm(type);
        var endPos = getParamePositionJustBeforeNumber(targetAnalyze);
        setPullDown("option" + type,targetAnalyze.substring(0,endPos));
        targetAnalyze = targetAnalyze.substring(endPos,targetAnalyze.length);
        targetAnalyze = targetAnalyze.split(".");
        setPullDown("years" + type,targetAnalyze[0]);
        setPullDown("month" + type,targetAnalyze[1]);
    }
 
    function resotorePeriodSetting(drange){
        radioSwitches[2].checked = true;
        createTimeForm(type);
        targetAnalyze = targetAnalyze.split(drange).join("");
        for(var i = 0;i < targetAnalyze.length;i++){
            if(targetAnalyze.charAt(i).match(/[^0-9]/))break;
        }
        form.elements[initialCode + "num1"].value = targetAnalyze.substring(0,i);
        setPullDown(initialCode + "num2",targetAnalyze.substring(i,targetAnalyze.length));
    setPullDown(initialCode + "daterange",drange);
    }
 
}
 
/*復元用補助関数*/
 
function setPullDown(selecter,SelectValue){
    var MenuList = form.elements[selecter].getElementsByTagName('option');
 
    for(var i = 0;i < MenuList.length;i++){
        if(MenuList[i].value == SelectValue){
            MenuList[i].selected = true;
        }else{
            MenuList[i].selected = false;
        }
    }
}

function decodeURIExtension(target){
/*この関数の
参考:
yukioc氏
JavaScriptでURLをちょっと賢く解読する。 CodingFirst
http://iyukki.blog56.fc2.com/blog-entry-120.html*/
    target=target.replace(/%(?:25)+([0-9A-F][0-9A-F])/g,function(whole,m1){
        return "%"+m1;
    });
    var utf8uri = new RegExp(
        "%[0-7][0-9A-F]|"+
        "%C[2-9A-F]%[89AB][0-9A-F]|%D[0-9A-F]%[89AB][0-9A-F]|"+
        "%E[0-F](?:%[89AB][0-9A-F]){2}|"+
        "%F[0-7](?:%[89AB][0-9A-F]){3}|"+
        "%F[89AB](?:%[89AB][0-9A-F]){4}|"+
        "%F[CD](?:%[89AB][0-9A-F]){5}","ig");
    target=target.replace(utf8uri,function(whole){
        return decodeURI(whole);
    });
    return target;
}
 
function extractSpecificParameter(parameter,check,target){
    check += target.length;
    for(var i = check;i < parameter.length;i++){
        if(parameter.charAt(i) == "/")break;
        if(parameter.charAt(i) == "#")break;
    }
    return parameter.substring(check,i);
}
 
function getParamePositionJustBeforeNumber(target){
    for(var i = 0;i < target.length;i++){
        if(target.charAt(i).match(/[0-9]/)){
        break;
        }
        if(target.charAt(i).match("-")){
        break;
        }
    }
    return i;
}

function sendList(){
    if(frameCheck >= 0){
     window.parent.window.frames[frameCheck].resList(listMax, window.parent.window.frames.self.length - 1);
    }
}

function resList2(list){
    var form = document.forms.mainForm;
    form.list1.checked = list[0];
    form.list2.checked = list[1];
    form.list3.checked = list[2];
    form.list4.checked = list[3];
    form.list5.checked = list[4];
    form.list6.checked = list[5];
    form.list7.checked = list[6];
    form.list8.checked = list[7];
    form.list9.checked = list[8];
    form.list10.checked = list[9];
    form.list11.checked = list[10];
    form.list12.checked = list[11];
    form.list13.checked = list[12];
    form.list14.checked = list[13];
    form.list15.checked = list[14];
}

//補助関数

//ラジオスイッチのチェックを取得します
function getRadioValue(ElmName){
    var result = "";
    if(!isMSBrowser()){
     result = Number(form.elements[ElmName].value);
    }else{
     var radisGroup = form.elements[ElmName];
     for(var i = 0;i < radisGroup.length;i++){
     if(radisGroup[i].checked){
     result = radisGroup[i].value;
     break;
     }
     }
    
    }
    return result;


}


</script>
<form name='mainForm'>
<center><h2>タグの選択</h2></center>
<span id = "tagField"><p><input type='checkbox' name='check1' value='true' checked='checked'>指定タグ: </p></span>
<span id="tagSel1">カテゴリ選択:
<select name='tag1' onChange='tagCat1()'>
<option value=''>...</option>
</select></span>
<span id="tagSel2"></span>
<span id="tagSel3"></span>
<p>直接入力: <input type="text" name="tagInput" value="scp" onkeydown="onkeydownTagInput(event);"><input type="button" value="タグを反映" onclick="tagInput1()"></p>
<center><h2>並べ替えオプション</h2></center>
<table style="margin-right:auto; margin-left:auto; width: 90%; border: 1px solid silver;">
<tr>
<td style="text-align: left; border: 0px">
<p><input type="checkbox" name="check9" value="true" checked='checked'>並び順:
<select name="order">
</select></p>
<p><input type="checkbox" name="check8">表示数の上限: <input type="number" name="page" value="20" max="250" min="1"></p>
<p><input type="checkbox" name="check6">オフセット: <input type="number" name="offset" value="0" max="250" min="0"></p>
</td>
</tr>
</table>
<center>
<br/><input type="button" value="この条件で検索" onclick="startSearch(0, '', 1)">
<h2>絞込みオプション</h2></center>
<table style="margin-right:auto; margin-left:auto; width: 90%; border: 1px solid silver;">
<tr>
<td style="text-align: left; border: 0px">
<p><input type="checkbox" name="check2">作成日時: <input type="radio" name="Ctype" value="0" checked="checked" onChange="createTimeForm(1)">年と月を指定 <input type="radio" name="Ctype" value="1" onChange="createTimeForm(1)">日付を指定 <input type="radio" name="Ctype" value="2" onChange="createTimeForm(1)">期間を指定</p>
<span id="created_at"></span>
<p><input type="checkbox" name="check3">更新日時: <input type="radio" name="Utype" value="0" checked="checked" onChange="createTimeForm(2)">年と月を指定 <input type="radio" name="Utype" value="1" onChange="createTimeForm(2)">日付を指定 <input type="radio" name="Utype" value="2" onChange="createTimeForm(2)">期間を指定</p>
<span id="updated_at"></span>
<p><input type="checkbox" name="check12">カテゴリ: <input type="text" name="category"  value="_default"></p>
<p><input type="checkbox" name="check4">ページ作者: <input type="text" name="author"  value="user_name"></p>
<p><input type="checkbox" name="check5">評価: <input type="number" name="rating2" value="0" /><select name="rating1" value="="></select></p>
<p><input type="checkbox" name="check11">得票数: <input type="number" name="votes2" value="0" min="0" /><select name="votes1" value="="></select></p>
<!-- <p><input type="checkbox" name="check7">先頭の文字: <input type="text" name="chara"></p> 動作が不安定なため未使用-->
<p><input type="checkbox" name="check10">親ページのみ表示</p>
</td>
</tr>
</table>
<span id="displayList">
<center><h2>表示項目</h2></center>
<table style="margin-right:auto; margin-left:auto; width: 90%; border: 1px solid silver;">
<tr>
<td style="text-align: left; border: 0px">
<h3>デフォルト表示</h3>
<p>ページ作成者<input type="checkbox" name="list2" checked='checked' onChange="sendList()">/
作成日時<input type="checkbox" name="list3" checked='checked' onChange="sendList()">/
コメント数<input type="checkbox" name="list8" checked='checked' onChange="sendList()">/
評価<input type="checkbox" name="list9" checked='checked' onChange="sendList()"></p>
<h3>更新・コメント</h3>
<p>最終更新者<input type="checkbox" name="list4" onChange="sendList()">/
最終日時<input type="checkbox" name="list5" onChange="sendList()">/
最終コメント者<input type="checkbox" name="list6" onChange="sendList()">/
最終コメント日時<input type="checkbox" name="list7" onChange="sendList()"></p>
<h3>パラメータ</h3>
<p>文字数<input type="checkbox" name="list10" onChange="sendList()">/
子ページ数<input type="checkbox" name="list11" onChange="sendList()">/
リビジョン数<input type="checkbox" name="list12" onChange="sendList()">/
評価内訳<input type="checkbox" name="list15" onChange="sendList()"></p>
<h3>その他</h3>
<p>オブジェクトクラス<input type="checkbox" name="list1" onChange="sendList()">/
メタタイトル<input type="checkbox" name="list13" onChange="sendList()">/
タグ一覧<input type="checkbox" name="list14" onChange="sendList()"></p>
</td>
</tr>
</table>
</span>
<center>
<input type="button" value="この条件で検索" onclick="startSearch(0, '', 1)">    <input type="button" value="検索結果を別タブで開く" onclick="startSearch(1, '', 1)">
</center>
</form>
[[/html]]
[[/div]]
+ 使い方
++ これ何？
サイト内のページを、付いているタグの種類で検索するためのシステムです。ページ下のタグ一覧やタグクラウドのリンクでは一種類のタグしか検索できませんが、このシステムを使うと複数の種類のタグをANDやORなどの条件をつけて検索することが出来ます。また、タグ以外にも作成・更新日時や作者、評価といった様々な条件で絞込を行い、更に並び順も自由に変えることが出来ます。表示項目のカスタマイズも可能であり、SCP記事のメタタイトルも表示することが出来ます。

ただし記事名やメタタイトルの文字列検索はできないため、その場合はこちらの[[[scpmetatitlesearch|タイトル検索システム]]]をご利用ください。

++ 検索項目の選択
**タグの選択**、**並べ替えオプション**、**絞り込みオプション**の中の各検索項目に存在するチェックボックスは、それぞれの検索機能を有効にするか否かを決定します。デフォルトでは**タグ選択**と**並び順**のみが有効となっており、それ以外の項目を有効にするためには、チェックボックスをクリックしてチェック状態にする必要があります。有効になっていない機能は、項目選択やテキストの入力が行われていても無視されます。

++ タグ選択
+++ 入力方法
タグの選択には2種類の方法があります。一つはプルダウンメニュー式のカテゴリ選択で、メニューのいずれかの項目を選択すると2段目のメニューが現れます。背景が黄色のメニューが現れた場合は、その中の項目を選択するとタグが**指定タグ**のエリアに反映されます。背景が白のメニューであった場合、項目を選択すると3段目のメニューが現れます。このメニューは全て背景が黄色であり、選択するとタグが**指定タグ**のエリアに反映されます。アトリビュートタグの2段目の分類は、[[*user physicslike]]が独断と偏見で選んだものであるのでご了承ください。
もう一つは直接入力のテキストエリアに文字を入力し、**タグを反映**のボタンを押す方法です。ただし使われているタグと文字列が完全に一致しない場合は検索に引っかからないので、このシステムのタグリストにまだ反映されていないタグを検索する場合などに使用してください。
+++ 指定タグリスト
入力されたタグは、指定タグリストに一つずつ表示されます。各タグの背景色は検索方法を表しており、デフォルトの青はそのタグを必ず含むページに絞り込みます。タグの名前の部分をクリックすると検索方法が切り替わり、赤の場合はそのタグを必ず含まないページ、緑の場合はそのタグを含むページを追加します。例えば、緑の"en"と緑の"jp"のタグがあった場合、「"en"か"jp"のいずれかのタグを含むページ」全てが表示されます。ここに青の"scp"のタグを加えると、「"scp"を含む"en"か"jp"のいずれかのタグが含まれるページ」全てが表示されます。更に赤の"keter"のタグが追加されれば、「"scp"を含む"en"か"jp"のいずれかのタグが含まれ、かつ"keter"タグが存在しないページ」全てが表示されます。
指定したタグを消したい場合は、タグの名前の左にある"×"をクリックしてください。
++ 並べ替えオプション
+++ 並び順
並べ替え方法は、プルダウンメニューに表示されている方法の中から選択可能です。タイトル順に関しては、英数字の場合のみ辞書順に並べ替えが行われますが、日本語だとでたらめな順番になります。文字数は全角・半角・記号・スペースを全て合計した数字でソートするため、構文を大量に使用したページほど見かけと順番の乖離が大きくなります。また、子ページを利用したページ切り替えシステムを使用しているページは、親ページの構文のみが対象になるためこちらも見かけと順番が一致しません。得票数は、UVとDVの数の合計値を基準に昇順と降順を指定できます。
+++ 表示数の上限
表示数の上限は、1ページ内に表示する項目の最大数を決定します。最大値は250です。メタタイトルを表示する場合、フレームの読み込みの関係であまり大きな数字にするとページを開くのに時間がかかります。
+++ オフセット
表示項目のうち、並び順で最初からその数字までの項目を非表示にします。
++ 絞込みオプション
+++ 作成日時・更新日時
作成日時、更新日時が特定の範囲内のページに絞り込みます。範囲の指定には以下の3つの方法を選ぶことができ、ラジオボタンで利用したい方法をチェックします。
# 年と月を指定 _
プルダウンメニューで西暦と月を選択し、範囲をその間、以前、以降、それよりも前、それよりも後のいずれかで選択します。特定の期間を指定できるのはこの方法だけですが、月と年の跨ぎのタイミングは世界標準時になります。
# 日付を指定 _
カレンダーメニューを使って特定の日付を選択すると、その日からページを開いた瞬間までに投稿or更新された記事に絞り込みます。こちらはローカルの標準時に対応しています（分単位で前日に食い込む誤差があります）。Firefoxなどの一部のブラウザはカレンダーメニューに非対応なので、YYYY-MM-DDの形式で手動で入力してください。
# 期間を指定 _
任意の数字と時間、日、週、月のいずれかの単位を設定し、現在からその時間だけ前の時点から現在までの期間か、あるいはその時点より前の期間かを選択します。
+++ カテゴリ
カテゴリ名を指定すると、そのカテゴリに属するページの中から検索を行います。カンマまたは半角スペースを間に挟むことで、複数のカテゴリを指定できます。
+++ ページ作者
ページの作成者の名前で絞り込みます。wikidot名の完全一致でのみ検索が可能です。
+++ 評価
ページの評価の値で絞り込みます。数字を入力し、その数字と同じ、その数字以外、その数字以下、その数字以上、その数字未満、その数字より大きい評価のページに絞り込みます。
+++ 得票数
UVとDVの数を合計した値で絞り込みます。設定方法は評価と同様です。
+++ 親ページのみ表示
子ページを全て検索から除外します。
++ 表示項目
各項目はチェックを入れることで表示、外すことで非表示になります。メタタイトル用のリストに切り替えた場合、チェック項目はリスト直下に表示されるようになり、チェック項目を変更するとリストにリアルタイム反映されます。
+++ デフォルト表示
表示項目の中で、リストナンバー、リンク付きタイトル、原文へのリンク(国旗のアイコン)は固定表示されています。原文へのリンクはタグによってBranchを判別しているため、基本的にはSCPオブジェクトとTaleのみに対応しており、著者ページやハブ、エッセイなどは未対応です。
ページ作成者、作成日時、コメント数、評価の項目はデフォルトでは表示されていますが、チェックを外すことで非表示にすることができます。
+++ パラメータ
文字数については、文字数ソートで参照している値を表示するため、前述の通りの見かけとの乖離が発生することがあります。子ページ数はそのページを親に持つ子ページの数を表示するため、殆どの場合がゼロです。リビジョン数は、そのページの更新の回数を表示します。評価内訳を選択した場合、評価項目が表示中に限りその項目中にUVとDVそれぞれの数が表示されます。
+++ その他
オブジェクトクラスの表示は、ロシア語版の表示を参考にしたカラー表記を採用しています。リスト番号とタイトルの間に表示され、凡例と比較してオブジェクトクラスを確認してください。
メタタイトルとは、SCPオブジェクトの一覧ページに表記されているタイトルです。この項目にチェックが付いた状態で検索された場合、メタタイトル表示専用のフレームが読み込まれるため、表示時間が多少遅くなります。また前述のように、一度の表示ページ数を増やしすぎると読み込みに時間がかかります。うまく読み込まれない場合は、ページ再読込で解決する場合があります。
タグ一覧は、そのページに付いているタグを全て表示します。リンクをクリックすることで、そのタグを検索条件とした再検索が出来ます。この項目はメタタイトル用リスト限定です。


このページ上のシステムは[[*user physicslike]]と[[*user C-take]]により開発されました。バグやインターフェイスについてのご意見があれば、このページのディスカッションにお願いします。